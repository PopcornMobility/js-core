{"ast":null,"code":"import _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/core/DetailsModal/index.js\";\n\nimport React from 'react';\nimport { Tabs, Modal } from 'antd';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nvar TabPane = Tabs.TabPane;\nvar DetailsModal = (_dec = connect(function (_ref) {\n  var settings = _ref.settings;\n  return {\n    settings: settings\n  };\n}), withRouter(_class = _dec(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(DetailsModal, _React$Component);\n\n  function DetailsModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DetailsModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DetailsModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modalVisible: true\n    };\n\n    _this.handleCancel = function () {\n      var _this$props = _this.props,\n          history = _this$props.history,\n          state = _this$props.location.state,\n          backLocation = _this$props.backLocation;\n\n      _this.setState({\n        modalVisible: false\n      }); // when opening an user profile url directly\n      // (by clicking a link or typing it in the browser address bar)\n      // going back is not possible or might have unwanted consequences\n      // (e.g. go back to a blank page), so we should avoid it\n      // modal=true is only set while normally navigating the app\n\n\n      if (state && state.modal) {\n        history.goBack();\n      } else if (backLocation) {\n        history.push(backLocation);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DetailsModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modalVisible = this.state.modalVisible;\n      var _this$props2 = this.props,\n          isMobileView = _this$props2.settings.isMobileView,\n          modalTitle = _this$props2.title,\n          titleComponent = _this$props2.titleComponent,\n          children = _this$props2.children,\n          tabs = _this$props2.tabs,\n          _this$props2$location = _this$props2.location,\n          hash = _this$props2$location.hash,\n          _this$props2$location2 = _this$props2$location.state;\n      _this$props2$location2 = _this$props2$location2 === void 0 ? {} : _this$props2$location2;\n      var selectedTab = _this$props2$location2.selectedTab,\n          history = _this$props2.history;\n\n      var tabTitle = function tabTitle(icon, title) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }\n        }, icon, isMobileView ? '' : \" \".concat(title));\n      };\n\n      var defaultActiveKey = '';\n\n      if (hash !== '') {\n        defaultActiveKey = hash.replace('#', '');\n      } else {\n        defaultActiveKey = selectedTab;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        title: modalTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        visible: modalVisible,\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, modalTitle, \" \", titleComponent),\n        style: {\n          maxWidth: isMobileView ? null : 1240,\n          top: isMobileView ? 72 : 80\n        },\n        width: isMobileView ? null : '90%',\n        onCancel: this.handleCancel,\n        footer: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, tabs && /*#__PURE__*/React.createElement(Tabs, {\n        onTabClick: function onTabClick(key) {\n          history.replace({\n            hash: key,\n            state: {\n              modal: true\n            }\n          });\n        },\n        type: isMobileView ? 'card' : 'line',\n        defaultActiveKey: defaultActiveKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, tabs.map(function (tab) {\n        return /*#__PURE__*/React.createElement(TabPane, {\n          tab: tabTitle(tab.icon, tab.title),\n          key: tab.key || tab.title.toLowerCase(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, tab.component);\n      })), children));\n    }\n  }]);\n\n  return DetailsModal;\n}(React.Component), _temp)) || _class) || _class);\nexport default DetailsModal;","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/core/DetailsModal/index.js"],"names":["React","Tabs","Modal","Helmet","connect","withRouter","classnames","TabPane","DetailsModal","settings","state","modalVisible","handleCancel","props","history","location","backLocation","setState","modal","goBack","push","isMobileView","modalTitle","title","titleComponent","children","tabs","hash","selectedTab","tabTitle","icon","defaultActiveKey","replace","maxWidth","top","key","map","tab","toLowerCase","component","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Tabs, Modal } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport classnames from 'classnames'\n\nconst { TabPane } = Tabs\n\n@withRouter\n@connect(({ settings }) => ({ settings }))\nclass DetailsModal extends React.Component {\n  state = {\n    modalVisible: true,\n  }\n\n  handleCancel = () => {\n    const {\n      history,\n      location: { state },\n      backLocation,\n    } = this.props\n\n    this.setState({\n      modalVisible: false,\n    })\n\n    // when opening an user profile url directly\n    // (by clicking a link or typing it in the browser address bar)\n    // going back is not possible or might have unwanted consequences\n    // (e.g. go back to a blank page), so we should avoid it\n    // modal=true is only set while normally navigating the app\n    if (state && state.modal) {\n      history.goBack()\n    } else if (backLocation) {\n      history.push(backLocation)\n    }\n  }\n\n  render() {\n    const { modalVisible } = this.state\n    const {\n      settings: { isMobileView },\n      title: modalTitle,\n      titleComponent,\n      children,\n      tabs,\n      location: { hash, state: { selectedTab } = {} },\n      history,\n    } = this.props\n\n    const tabTitle = (icon, title) => (\n      <span>\n        {icon}\n        {isMobileView ? '' : ` ${title}`}\n      </span>\n    )\n\n    let defaultActiveKey = ''\n\n    if (hash !== '') {\n      defaultActiveKey = hash.replace('#', '')\n    } else {\n      defaultActiveKey = selectedTab\n    }\n\n    return (\n      <div>\n        <Helmet title={modalTitle} />\n\n        <Modal\n          visible={modalVisible}\n          title={\n            <div>\n              {modalTitle} {titleComponent}\n            </div>\n          }\n          style={{ maxWidth: isMobileView ? null : 1240, top: isMobileView ? 72 : 80 }}\n          width={isMobileView ? null : '90%'}\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          {tabs && (\n            <Tabs\n              onTabClick={key => {\n                history.replace({ hash: key, state: { modal: true } })\n              }}\n              type={isMobileView ? 'card' : 'line'}\n              defaultActiveKey={defaultActiveKey}\n            >\n              {tabs.map(tab => (\n                <TabPane\n                  tab={tabTitle(tab.icon, tab.title)}\n                  key={tab.key || tab.title.toLowerCase()}\n                >\n                  {tab.component}\n                </TabPane>\n              ))}\n            </Tabs>\n          )}\n\n          {children}\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default DetailsModal\n"]},"metadata":{},"sourceType":"module"}