{"ast":null,"code":"import _slicedToArray from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/generic/DataTable/index.js\";\n\nimport React from \"react\";\nimport { Table, Input, Row, Col, Button, Tooltip } from \"antd\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport download from \"downloadjs\";\nimport { injectIntl } from \"react-intl\";\nimport net from \"../../../utils/net\";\nimport RemoteFilter from \"./remoteFilter\";\nimport ColumnSelector from \"./columnSelector\";\nvar DataTable = (_dec = connect(function (_ref) {\n  var isMobileView = _ref.settings.isMobileView;\n  return {\n    isMobileView: isMobileView\n  };\n}), injectIntl(_class = _dec(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(DataTable, _React$Component);\n\n  function DataTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      params: {\n        search: \"\",\n        page: 1,\n        limit: 25 // default page size\n\n      },\n      columnSelector: {}\n    };\n\n    _this.getParams = function () {\n      var _this$props = _this.props,\n          filters = _this$props.filters,\n          loadActionPayload = _this$props.loadActionPayload,\n          columns = _this$props.columns;\n      var params = _this.state.params;\n      var defaultSortableColumns = columns.filter(function (column) {\n        return column.defaultSortOrder && column.dataIndex;\n      }); // define default sorter, if none already specified by user\n\n      if (defaultSortableColumns.length > 0 && !params.sorter) {\n        var col = defaultSortableColumns[0];\n        params = _objectSpread({}, params, {\n          sorter: {\n            field: col.dataIndex,\n            order: col.defaultSortOrder === \"ascend\" ? \"ASC\" : \"DESC\"\n          }\n        });\n      } // if filters have been set as a prop, merge with the ones from state\n\n\n      if (filters) {\n        params = _objectSpread({}, params, {\n          filters: _objectSpread({}, params.filters, filters)\n        });\n      } // if extra load action params were set as a prop, merge with those as well\n\n      /* \n        Preserve state params filters and prop filters\n        Merge above with filters from loadActionPayload filters\n      */\n\n\n      if (loadActionPayload) {\n        var filtersFromPayload = loadActionPayload.filters,\n            rest = _objectWithoutProperties(loadActionPayload, [\"filters\"]);\n\n        params = _objectSpread({}, params, rest);\n\n        if (filtersFromPayload) {\n          params = _objectSpread({}, params, {\n            filters: _objectSpread({}, params.filters, filtersFromPayload)\n          });\n        }\n      }\n\n      return params;\n    };\n\n    _this.load = function () {\n      var _this$props2 = _this.props,\n          dispatch = _this$props2.dispatch,\n          loadAction = _this$props2.loadAction;\n      dispatch(loadAction(_this.getParams()));\n    };\n\n    _this.handleTableChange = function (pagination, filters, sorter) {\n      var search = _this.state.params.search; // only keep the search value from the old params object, the rest should be rebuilt\n\n      var params = {\n        search: search,\n        page: pagination.current,\n        limit: pagination.pageSize\n      }; // only keep non null filters\n\n      var cleanFilters = Object.entries(filters).filter(function (entry) {\n        return entry[1] !== null;\n      });\n\n      if (cleanFilters.length !== 0) {\n        params = _objectSpread({}, params, {\n          filters: Object.fromEntries(cleanFilters)\n        });\n      } // only store sorter if it's non empty, otherwise the API might fail\n\n\n      if (sorter.field && sorter.order) {\n        params = _objectSpread({}, params, {\n          sorter: {\n            field: sorter.field,\n            order: sorter.order === \"ascend\" ? \"ASC\" : \"DESC\"\n          }\n        });\n      } // persist the final object so we can use it when searching\n\n\n      _this.setState({\n        params: params\n      }, function () {\n        return _this.load();\n      });\n    };\n\n    _this.handleSearch = function (search) {\n      var params = _this.state.params;\n      params = _objectSpread({}, params, {\n        page: 1,\n        // reset current page when searching\n        search: search\n      });\n\n      _this.setState({\n        params: params\n      }, function () {\n        return _this.load();\n      });\n    };\n\n    _this.handleSearchInputChange = function (e) {\n      var params = _this.state.params;\n\n      _this.setState({\n        params: _objectSpread({}, params, {\n          search: e.target.value\n        })\n      });\n    };\n\n    _this.clearFilters = function () {\n      var limit = _this.state.params.limit;\n      var params = {\n        limit: limit,\n        page: 1,\n        search: \"\"\n      };\n\n      _this.setState({\n        params: params\n      }, function () {\n        return _this.load();\n      });\n    };\n\n    _this.handleClearFilters = function () {\n      var onClearFilters = _this.props.onClearFilters;\n\n      _this.clearFilters();\n\n      if (onClearFilters) {\n        onClearFilters();\n      }\n    };\n\n    _this.handlePayloadChange = function () {\n      var params = _this.state.params;\n\n      _this.setState({\n        params: _objectSpread({}, params, {\n          page: 1\n        })\n      }, function () {\n        return _this.load();\n      });\n    };\n\n    _this.handleRefresh = function () {\n      _this.load();\n    };\n\n    _this.handleExportClick = function () {\n      var _this$props$exportCon = _this.props.exportConfig,\n          apiFn = _this$props$exportCon.apiFn,\n          _this$props$exportCon2 = _this$props$exportCon.filename,\n          filename = _this$props$exportCon2 === void 0 ? \"export.xlsx\" : _this$props$exportCon2,\n          _this$props$exportCon3 = _this$props$exportCon.mimeType,\n          mimeType = _this$props$exportCon3 === void 0 ? \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" : _this$props$exportCon3;\n      var api = net.api;\n      var apiConfig = apiFn(_this.getParams());\n      api(apiConfig).then(function (response) {\n        return response.blob();\n      }).then(function (blob) {\n        download(blob, filename, mimeType);\n      });\n    };\n\n    _this.remoteFilterConfig = function (config) {\n      return {\n        filterDropdown: function filterDropdown(_ref2) {\n          var setSelectedKeys = _ref2.setSelectedKeys,\n              confirm = _ref2.confirm;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: config.styleColumn ? _objectSpread({}, config.styleColumn) : {\n              padding: 8,\n              width: \"200px\"\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(RemoteFilter, {\n            remoteSearch: config,\n            tableDropdownFn: {\n              setSelectedKeys: setSelectedKeys,\n              confirm: confirm\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 9\n            }\n          }));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(FilterOutlined, {\n            style: {\n              color: filtered ? \"#1890ff\" : undefined\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 7\n            }\n          });\n        }\n      };\n    };\n\n    _this.processColumns = function (columns) {\n      // the method aims to hook the columns' sorter and filters to the\n      // internal state of our component, so we can easily reset all of them\n      var _this$state = _this.state,\n          _this$state$params = _this$state.params,\n          sorter = _this$state$params.sorter,\n          filters = _this$state$params.filters,\n          columnSelector = _this$state.columnSelector;\n      var _this$props3 = _this.props,\n          propFilters = _this$props3.filters,\n          isMobileView = _this$props3.isMobileView;\n      var processedColumns = columns.map(function (column) {\n        // Set hidden attribute by default. Avoid using 'undefined' type\n        if (column.hidden !== true) {\n          column.hidden = false;\n        } // filter out columns that should be hidden on mobile\n        // Will be overwritten by <ColumnSelector  /> if enabled\n\n\n        if (column.mobile === false && isMobileView) {\n          column.hidden = true;\n        }\n\n        return column;\n      }); // Need to make copies of 'processedColumns' to not loose columns\n      // For <Table /> we use 'columnsForTable'\n      // For <ColumnSelector  /> we use 'processedColumns'\n\n      var columnsForTable = _toConsumableArray(processedColumns); // columnSelector - Correct hidden attribute by state\n\n\n      if (Object.keys(columnSelector).length > 0) {\n        columnsForTable = columnsForTable.map(function (column) {\n          var lookup = column.dataIndex || column.key;\n\n          if (columnSelector[lookup] !== undefined) {\n            column.hidden = columnSelector[lookup];\n          }\n\n          return column;\n        });\n      } // Filter and map <Table /> columns based on hidden prop\n\n\n      columnsForTable = columnsForTable.filter(function (column) {\n        return column.hidden === false;\n      });\n      columnsForTable = columnsForTable.map(function (column) {\n        if (!sorter) {\n          column.sortOrder = false;\n        }\n\n        if (sorter && column.dataIndex === sorter.field) {\n          column.sortOrder = \"\".concat(sorter.order.toLowerCase(), \"end\"); // ascend / descend\n        }\n\n        if (filters && filters[column.dataIndex]) {\n          column.filteredValue = filters[column.dataIndex];\n        } else {\n          column.filteredValue = null;\n        } // if a filter has been set via props, prevent user from changing it\n\n\n        if (propFilters && propFilters[column.dataIndex]) {\n          column.filters = [];\n        }\n\n        if (column.remoteFilter) {\n          column = _objectSpread({}, column, _this.remoteFilterConfig(column.remoteFilter));\n        }\n\n        return column;\n      }); // Return both arrays of columns\n\n      return [processedColumns, columnsForTable];\n    };\n\n    _this.onColumnSelectionChanged = function (columns) {\n      _this.setState(function (prevState) {\n        var newState = _objectSpread({}, prevState, {\n          columnSelector: _objectSpread({}, prevState.columnSelector, columns)\n        });\n\n        return newState;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // perform initial load\n      this.load();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n          filters = _this$props4.filters,\n          loadActionPayload = _this$props4.loadActionPayload;\n\n      if (!_.isEqual(prevProps.filters, filters)) {\n        // reload if prop filters have changed, while also clearing previous filters\n        this.clearFilters();\n      }\n\n      if (!_.isEqual(prevProps.loadActionPayload, loadActionPayload)) {\n        this.handlePayloadChange();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$params2 = this.state.params,\n          page = _this$state$params2.page,\n          limit = _this$state$params2.limit,\n          search = _this$state$params2.search;\n\n      var _this$props5 = this.props,\n          intl = _this$props5.intl,\n          _this$props5$dataSour = _this$props5.dataSource,\n          data = _this$props5$dataSour.data,\n          loading = _this$props5$dataSour.loading,\n          pagination = _this$props5$dataSour.pagination,\n          actions = _this$props5.actions,\n          rowDoubleClick = _this$props5.rowDoubleClick,\n          columns = _this$props5.columns,\n          showColumnSelector = _this$props5.showColumnSelector,\n          exportConfig = _this$props5.exportConfig,\n          settingsKey = _this$props5.settingsKey,\n          customSearch = _this$props5.customSearch,\n          rest = _objectWithoutProperties(_this$props5, [\"intl\", \"dataSource\", \"actions\", \"rowDoubleClick\", \"columns\", \"showColumnSelector\", \"exportConfig\", \"settingsKey\", \"customSearch\"]);\n\n      var _this$processColumns = this.processColumns(columns),\n          _this$processColumns2 = _slicedToArray(_this$processColumns, 2),\n          columnsForColumnSelector = _this$processColumns2[0],\n          columnsForTable = _this$processColumns2[1];\n\n      var extra = /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 7\n        }\n      }, _.isUndefined(customSearch) && /*#__PURE__*/React.createElement(Col, {\n        cs: 24,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input.Search, {\n        className: \"mb-4\",\n        placeholder: intl.formatMessage({\n          id: \"datatable.search\"\n        }),\n        onSearch: this.handleSearch,\n        value: search,\n        onChange: this.handleSearchInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      })), !_.isUndefined(customSearch) && /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        style: {\n          display: \"inline-flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      }, customSearch)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        style: {\n          display: \"inline-flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"top\",\n        title: intl.formatMessage({\n          id: \"datatable.tooltips.clear\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"stop\",\n        onClick: this.handleClearFilters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"top\",\n        title: intl.formatMessage({\n          id: \"datatable.tooltips.refresh\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"reload\",\n        onClick: this.handleRefresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }\n      }, intl.formatMessage({\n        id: \"datatable.actions.refresh\"\n      })))), showColumnSelector && /*#__PURE__*/React.createElement(ColumnSelector, {\n        onColumnSelectionChanged: this.onColumnSelectionChanged,\n        className: \"ml-2\",\n        columns: columnsForColumnSelector,\n        settingsKey: settingsKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }\n      }), exportConfig && /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"top\",\n        title: intl.formatMessage({\n          id: \"datatable.tooltips.export\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"ml-2\",\n        icon: \"download\",\n        onClick: this.handleExportClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      })), actions)));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 7\n        }\n      }, extra, /*#__PURE__*/React.createElement(Table, Object.assign({\n        key: columns.length,\n        rowKey: \"id\",\n        className: \"utils__scrollTable\",\n        columns: columnsForTable,\n        dataSource: data,\n        onChange: this.handleTableChange,\n        loading: loading,\n        pagination: {\n          showLessItems: true,\n          showQuickJumper: true,\n          current: page,\n          defaultPageSize: limit,\n          showSizeChanger: true,\n          pageSizeOptions: [\"10\", \"25\", \"50\", \"100\", \"200\"],\n          total: pagination && pagination.total\n        },\n        onRow: function onRow(record, rowIndex) {\n          return {\n            onDoubleClick: function onDoubleClick(event) {\n              if (rowDoubleClick) {\n                rowDoubleClick(record, rowIndex, event);\n              }\n            }\n          };\n        }\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return DataTable;\n}(React.Component), _temp)) || _class) || _class);\nexport default DataTable;","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/generic/DataTable/index.js"],"names":["React","Table","Input","Row","Col","Button","Tooltip","FilterOutlined","_","connect","download","injectIntl","net","RemoteFilter","ColumnSelector","DataTable","isMobileView","settings","state","params","search","page","limit","columnSelector","getParams","props","filters","loadActionPayload","columns","defaultSortableColumns","filter","column","defaultSortOrder","dataIndex","length","sorter","col","field","order","filtersFromPayload","rest","load","dispatch","loadAction","handleTableChange","pagination","current","pageSize","cleanFilters","Object","entries","entry","fromEntries","setState","handleSearch","handleSearchInputChange","e","target","value","clearFilters","handleClearFilters","onClearFilters","handlePayloadChange","handleRefresh","handleExportClick","exportConfig","apiFn","filename","mimeType","api","apiConfig","then","response","blob","remoteFilterConfig","config","filterDropdown","setSelectedKeys","confirm","styleColumn","padding","width","filterIcon","filtered","color","undefined","processColumns","propFilters","processedColumns","map","hidden","mobile","columnsForTable","keys","lookup","key","sortOrder","toLowerCase","filteredValue","remoteFilter","onColumnSelectionChanged","prevState","newState","prevProps","isEqual","intl","dataSource","data","loading","actions","rowDoubleClick","showColumnSelector","settingsKey","customSearch","columnsForColumnSelector","extra","isUndefined","formatMessage","id","display","showLessItems","showQuickJumper","defaultPageSize","showSizeChanger","pageSizeOptions","total","record","rowIndex","onDoubleClick","event","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Input, Row, Col, Button, Tooltip } from \"antd\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport download from \"downloadjs\";\nimport { injectIntl } from \"react-intl\";\n\nimport net from \"../../../utils/net\";\nimport RemoteFilter from \"./remoteFilter\";\nimport ColumnSelector from \"./columnSelector\";\n\n@injectIntl\n@connect(({ settings: { isMobileView } }) => ({ isMobileView }))\nclass DataTable extends React.Component {\n  state = {\n    params: {\n      search: \"\",\n      page: 1,\n      limit: 25 // default page size\n    },\n    columnSelector: {}\n  };\n\n  componentDidMount() {\n    // perform initial load\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { filters, loadActionPayload } = this.props;\n\n    if (!_.isEqual(prevProps.filters, filters)) {\n      // reload if prop filters have changed, while also clearing previous filters\n      this.clearFilters();\n    }\n\n    if (!_.isEqual(prevProps.loadActionPayload, loadActionPayload)) {\n      this.handlePayloadChange();\n    }\n  }\n\n  getParams = () => {\n    const { filters, loadActionPayload, columns } = this.props;\n    let { params } = this.state;\n\n    const defaultSortableColumns = columns.filter(\n      column => column.defaultSortOrder && column.dataIndex\n    );\n\n    // define default sorter, if none already specified by user\n    if (defaultSortableColumns.length > 0 && !params.sorter) {\n      const col = defaultSortableColumns[0];\n\n      params = {\n        ...params,\n        sorter: {\n          field: col.dataIndex,\n          order: col.defaultSortOrder === \"ascend\" ? \"ASC\" : \"DESC\"\n        }\n      };\n    }\n\n    // if filters have been set as a prop, merge with the ones from state\n    if (filters) {\n      params = {\n        ...params,\n        filters: {\n          ...params.filters,\n          ...filters\n        }\n      };\n    }\n\n    // if extra load action params were set as a prop, merge with those as well\n    /* \n      Preserve state params filters and prop filters\n      Merge above with filters from loadActionPayload filters\n    */\n    if (loadActionPayload) {\n      const { filters: filtersFromPayload, ...rest } = loadActionPayload;\n\n      params = {\n        ...params,\n        ...rest\n      };\n\n      if (filtersFromPayload) {\n        params = {\n          ...params,\n          filters: {\n            ...params.filters,\n            ...filtersFromPayload\n          }\n        };\n      }\n    }\n\n    return params;\n  };\n\n  load = () => {\n    const { dispatch, loadAction } = this.props;\n    dispatch(loadAction(this.getParams()));\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const {\n      params: { search }\n    } = this.state;\n\n    // only keep the search value from the old params object, the rest should be rebuilt\n    let params = {\n      search,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n\n    // only keep non null filters\n    const cleanFilters = Object.entries(filters).filter(\n      entry => entry[1] !== null\n    );\n\n    if (cleanFilters.length !== 0) {\n      params = {\n        ...params,\n        filters: Object.fromEntries(cleanFilters)\n      };\n    }\n\n    // only store sorter if it's non empty, otherwise the API might fail\n    if (sorter.field && sorter.order) {\n      params = {\n        ...params,\n        sorter: {\n          field: sorter.field,\n          order: sorter.order === \"ascend\" ? \"ASC\" : \"DESC\"\n        }\n      };\n    }\n\n    // persist the final object so we can use it when searching\n    this.setState({ params }, () => this.load());\n  };\n\n  handleSearch = search => {\n    let { params } = this.state;\n\n    params = {\n      ...params,\n      page: 1, // reset current page when searching\n      search\n    };\n\n    this.setState({ params }, () => this.load());\n  };\n\n  handleSearchInputChange = e => {\n    const { params } = this.state;\n\n    this.setState({\n      params: {\n        ...params,\n        search: e.target.value\n      }\n    });\n  };\n\n  clearFilters = () => {\n    const {\n      params: { limit }\n    } = this.state;\n\n    const params = {\n      limit,\n      page: 1,\n      search: \"\"\n    };\n\n    this.setState({ params }, () => this.load());\n  };\n\n  handleClearFilters = () => {\n    const { onClearFilters } = this.props;\n\n    this.clearFilters();\n\n    if (onClearFilters) {\n      onClearFilters();\n    }\n  };\n\n  handlePayloadChange = () => {\n    const { params } = this.state;\n\n    this.setState(\n      {\n        params: {\n          ...params,\n          page: 1\n        }\n      },\n      () => this.load()\n    );\n  };\n\n  handleRefresh = () => {\n    this.load();\n  };\n\n  handleExportClick = () => {\n    const {\n      exportConfig: {\n        apiFn,\n        filename = \"export.xlsx\",\n        mimeType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      }\n    } = this.props;\n    const { api } = net;\n\n    const apiConfig = apiFn(this.getParams());\n\n    api(apiConfig)\n      .then(response => response.blob())\n      .then(blob => {\n        download(blob, filename, mimeType);\n      });\n  };\n\n  remoteFilterConfig = config => ({\n    filterDropdown: ({ setSelectedKeys, confirm }) => (\n      <div\n        style={\n          config.styleColumn\n            ? { ...config.styleColumn }\n            : { padding: 8, width: \"200px\" }\n        }\n      >\n        <RemoteFilter\n          remoteSearch={config}\n          tableDropdownFn={{\n            setSelectedKeys,\n            confirm\n          }}\n        />\n      </div>\n    ),\n    filterIcon: filtered => (\n      <FilterOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    )\n  });\n\n  processColumns = columns => {\n    // the method aims to hook the columns' sorter and filters to the\n    // internal state of our component, so we can easily reset all of them\n\n    const {\n      params: { sorter, filters },\n      columnSelector\n    } = this.state;\n\n    const { filters: propFilters, isMobileView } = this.props;\n\n    const processedColumns = columns.map(column => {\n      // Set hidden attribute by default. Avoid using 'undefined' type\n      if (column.hidden !== true) {\n        column.hidden = false;\n      }\n\n      // filter out columns that should be hidden on mobile\n      // Will be overwritten by <ColumnSelector  /> if enabled\n      if (column.mobile === false && isMobileView) {\n        column.hidden = true;\n      }\n\n      return column;\n    });\n\n    // Need to make copies of 'processedColumns' to not loose columns\n    // For <Table /> we use 'columnsForTable'\n    // For <ColumnSelector  /> we use 'processedColumns'\n\n    let columnsForTable = [...processedColumns];\n\n    // columnSelector - Correct hidden attribute by state\n    if (Object.keys(columnSelector).length > 0) {\n      columnsForTable = columnsForTable.map(column => {\n        const lookup = column.dataIndex || column.key;\n\n        if (columnSelector[lookup] !== undefined) {\n          column.hidden = columnSelector[lookup];\n        }\n\n        return column;\n      });\n    }\n\n    // Filter and map <Table /> columns based on hidden prop\n    columnsForTable = columnsForTable.filter(column => column.hidden === false);\n\n    columnsForTable = columnsForTable.map(column => {\n      if (!sorter) {\n        column.sortOrder = false;\n      }\n\n      if (sorter && column.dataIndex === sorter.field) {\n        column.sortOrder = `${sorter.order.toLowerCase()}end`; // ascend / descend\n      }\n\n      if (filters && filters[column.dataIndex]) {\n        column.filteredValue = filters[column.dataIndex];\n      } else {\n        column.filteredValue = null;\n      }\n\n      // if a filter has been set via props, prevent user from changing it\n      if (propFilters && propFilters[column.dataIndex]) {\n        column.filters = [];\n      }\n\n      if (column.remoteFilter) {\n        column = {\n          ...column,\n          ...this.remoteFilterConfig(column.remoteFilter)\n        };\n      }\n\n      return column;\n    });\n\n    // Return both arrays of columns\n    return [processedColumns, columnsForTable];\n  };\n\n  // Event for <ColumnSelector />\n  onColumnSelectionChanged = columns => {\n    this.setState(prevState => {\n      const newState = {\n        ...prevState,\n        columnSelector: {\n          ...prevState.columnSelector,\n          ...columns\n        }\n      };\n\n      return newState;\n    });\n  };\n\n  render() {\n    const {\n      params: { page, limit, search }\n    } = this.state;\n\n    const {\n      intl,\n      dataSource: { data, loading, pagination },\n      actions,\n      rowDoubleClick,\n      columns,\n      showColumnSelector,\n      exportConfig,\n      settingsKey,\n      customSearch,\n      ...rest\n    } = this.props;\n\n    const [columnsForColumnSelector, columnsForTable] = this.processColumns(\n      columns\n    );\n\n    const extra = (\n      <Row type=\"flex\" justify=\"space-between\">\n        {_.isUndefined(customSearch) && (\n          <Col cs={24} sm={8}>\n            <Input.Search\n              className=\"mb-4\"\n              placeholder={intl.formatMessage({ id: \"datatable.search\" })}\n              onSearch={this.handleSearch}\n              value={search}\n              onChange={this.handleSearchInputChange}\n            />\n          </Col>\n        )}\n\n        {!_.isUndefined(customSearch) && (\n          <Col>\n            <div className=\"mb-4\" style={{ display: \"inline-flex\" }}>\n              {customSearch}\n            </div>\n          </Col>\n        )}\n\n        <Col>\n          <div className=\"mb-4\" style={{ display: \"inline-flex\" }}>\n            <Button.Group>\n              <Tooltip\n                placement=\"top\"\n                title={intl.formatMessage({ id: \"datatable.tooltips.clear\" })}\n              >\n                <Button icon=\"stop\" onClick={this.handleClearFilters} />\n              </Tooltip>\n              <Tooltip\n                placement=\"top\"\n                title={intl.formatMessage({ id: \"datatable.tooltips.refresh\" })}\n              >\n                <Button icon=\"reload\" onClick={this.handleRefresh}>\n                  {intl.formatMessage({ id: \"datatable.actions.refresh\" })}\n                </Button>\n              </Tooltip>\n            </Button.Group>\n\n            {showColumnSelector && (\n              <ColumnSelector\n                onColumnSelectionChanged={this.onColumnSelectionChanged}\n                className=\"ml-2\"\n                columns={columnsForColumnSelector}\n                settingsKey={settingsKey}\n              />\n            )}\n\n            {exportConfig && (\n              <Tooltip\n                placement=\"top\"\n                title={intl.formatMessage({ id: \"datatable.tooltips.export\" })}\n              >\n                <Button\n                  className=\"ml-2\"\n                  icon=\"download\"\n                  onClick={this.handleExportClick}\n                />\n              </Tooltip>\n            )}\n\n            {actions}\n          </div>\n        </Col>\n      </Row>\n    );\n\n    return (\n      <div>\n        {extra}\n\n        <Table\n          key={columns.length}\n          rowKey=\"id\"\n          className=\"utils__scrollTable\"\n          columns={columnsForTable}\n          dataSource={data}\n          onChange={this.handleTableChange}\n          loading={loading}\n          pagination={{\n            showLessItems: true,\n            showQuickJumper: true,\n            current: page,\n            defaultPageSize: limit,\n            showSizeChanger: true,\n            pageSizeOptions: [\"10\", \"25\", \"50\", \"100\", \"200\"],\n            total: pagination && pagination.total\n          }}\n          onRow={(record, rowIndex) => {\n            return {\n              onDoubleClick: event => {\n                if (rowDoubleClick) {\n                  rowDoubleClick(record, rowIndex, event);\n                }\n              }\n            };\n          }}\n          {...rest}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}