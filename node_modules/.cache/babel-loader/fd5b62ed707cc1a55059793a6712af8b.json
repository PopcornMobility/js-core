{"ast":null,"code":"import _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/core/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { logger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport * as serviceWorker from '../../../serviceWorker';\nimport Router from '../Router';\nimport Localization from '../Localization';\nimport defaultModules from '../../../modules';\nimport initReducers from '../../../redux/reducers';\nimport initSagas from '../../../redux/sagas';\nimport { IntlReduxMiddleware } from '../Localization/IntlReduxMiddleware'; // app styles\n\nimport '../../../assets/styles/global.scss'; // disable cache-first approach\n\nserviceWorker.unregister();\nvar history = createBrowserHistory();\nvar sagaMiddleware = createSagaMiddleware();\nvar routeMiddleware = routerMiddleware(history);\nvar middlewares = [IntlReduxMiddleware, thunk, sagaMiddleware, routeMiddleware]; // Redux Logger\n\nif (process.env.REACT_APP_REDUX_LOGGER === 'true') {\n  middlewares.push(logger);\n}\n\nvar processModules = function processModules() {\n  var modules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  modules = [].concat(_toConsumableArray(defaultModules), _toConsumableArray(modules)); // ensure module uniqueness and correct ordering\n\n  var processedModules = new Map();\n  modules.forEach(function (module) {\n    processedModules.set(module.name, module);\n  });\n  return Array.from(processedModules.values());\n};\n\nvar createAdminStore = function createAdminStore(modules) {\n  var reducers = {};\n  var sagas = [];\n  modules.forEach(function (module) {\n    if (module.reducers) {\n      reducers = _objectSpread({}, reducers, module.reducers);\n    }\n\n    if (module.sagas) {\n      sagas = [].concat(_toConsumableArray(sagas), _toConsumableArray(module.sagas));\n    }\n  });\n  var store = createStore(initReducers({\n    history: history\n  }, reducers), compose(applyMiddleware.apply(void 0, middlewares)));\n  sagaMiddleware.run(initSagas({}, sagas));\n  return store;\n};\n\nvar getRoutes = function getRoutes(modules) {\n  var routes = [];\n  modules.forEach(function (module) {\n    if (module.routes) {\n      routes = [].concat(_toConsumableArray(routes), _toConsumableArray(module.routes));\n    }\n  });\n  return routes;\n};\n\nvar getMenu = function getMenu(modules) {\n  var left = [];\n  modules.forEach(function (module) {\n    if (module.menu) {\n      left = [].concat(_toConsumableArray(left), _toConsumableArray(module.menu));\n    }\n  });\n  return {\n    left: left,\n    top: []\n  };\n};\n\nvar getLocales = function getLocales(modules) {\n  var locales = [];\n  modules.forEach(function (module) {\n    if (module.locales) {\n      locales.push(module.locales);\n    }\n  });\n  return locales;\n};\n\nexport var AdminContext = React.createContext({});\n\nvar Admin = /*#__PURE__*/function (_Component) {\n  _inherits(Admin, _Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n    var modules = _this.props.modules;\n    _this.modules = processModules(modules);\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: createAdminStore(this.modules),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AdminContext.Provider, {\n        value: this.props,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Localization, {\n        locales: getLocales(this.modules),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        history: history,\n        routes: getRoutes(this.modules),\n        menu: getMenu(this.modules),\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport { Admin as default };","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/core/Admin/index.js"],"names":["React","Component","logger","Provider","thunk","createSagaMiddleware","routerMiddleware","createStore","applyMiddleware","compose","createBrowserHistory","serviceWorker","Router","Localization","defaultModules","initReducers","initSagas","IntlReduxMiddleware","unregister","history","sagaMiddleware","routeMiddleware","middlewares","process","env","REACT_APP_REDUX_LOGGER","push","processModules","modules","processedModules","Map","forEach","module","set","name","Array","from","values","createAdminStore","reducers","sagas","store","run","getRoutes","routes","getMenu","left","menu","top","getLocales","locales","AdminContext","createContext","Admin","props","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAO,KAAKC,aAAZ,MAA+B,wBAA/B;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,SAASC,mBAAT,QAAoC,qCAApC,C,CAEA;;AACA,OAAO,oCAAP,C,CAEA;;AACAN,aAAa,CAACO,UAAd;AAEA,IAAMC,OAAO,GAAGT,oBAAoB,EAApC;AACA,IAAMU,cAAc,GAAGf,oBAAoB,EAA3C;AACA,IAAMgB,eAAe,GAAGf,gBAAgB,CAACa,OAAD,CAAxC;AACA,IAAMG,WAAW,GAAG,CAACL,mBAAD,EAAsBb,KAAtB,EAA6BgB,cAA7B,EAA6CC,eAA7C,CAApB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,sBAAZ,KAAuC,MAA3C,EAAmD;AACjDH,EAAAA,WAAW,CAACI,IAAZ,CAAiBxB,MAAjB;AACD;;AAED,IAAMyB,cAAc,GAAG,SAAjBA,cAAiB,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACvCA,EAAAA,OAAO,gCAAOd,cAAP,sBAA0Bc,OAA1B,EAAP,CADuC,CAGvC;;AACA,MAAMC,gBAAgB,GAAG,IAAIC,GAAJ,EAAzB;AAEAF,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxBH,IAAAA,gBAAgB,CAACI,GAAjB,CAAqBD,MAAM,CAACE,IAA5B,EAAkCF,MAAlC;AACD,GAFD;AAIA,SAAOG,KAAK,CAACC,IAAN,CAAWP,gBAAgB,CAACQ,MAAjB,EAAX,CAAP;AACD,CAXD;;AAaA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAV,OAAO,EAAI;AAClC,MAAIW,QAAQ,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAZ,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIA,MAAM,CAACO,QAAX,EAAqB;AACnBA,MAAAA,QAAQ,qBACHA,QADG,EAEHP,MAAM,CAACO,QAFJ,CAAR;AAID;;AAED,QAAIP,MAAM,CAACQ,KAAX,EAAkB;AAChBA,MAAAA,KAAK,gCAAOA,KAAP,sBAAiBR,MAAM,CAACQ,KAAxB,EAAL;AACD;AACF,GAXD;AAaA,MAAMC,KAAK,GAAGlC,WAAW,CACvBQ,YAAY,CAAC;AAAEI,IAAAA,OAAO,EAAPA;AAAF,GAAD,EAAcoB,QAAd,CADW,EAEvB9B,OAAO,CAACD,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAFgB,CAAzB;AAIAF,EAAAA,cAAc,CAACsB,GAAf,CAAmB1B,SAAS,CAAC,EAAD,EAAKwB,KAAL,CAA5B;AAEA,SAAOC,KAAP;AACD,CAxBD;;AA0BA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAf,OAAO,EAAI;AAC3B,MAAIgB,MAAM,GAAG,EAAb;AAEAhB,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIA,MAAM,CAACY,MAAX,EAAmB;AACjBA,MAAAA,MAAM,gCAAOA,MAAP,sBAAkBZ,MAAM,CAACY,MAAzB,EAAN;AACD;AACF,GAJD;AAMA,SAAOA,MAAP;AACD,CAVD;;AAYA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAjB,OAAO,EAAI;AACzB,MAAIkB,IAAI,GAAG,EAAX;AAEAlB,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIA,MAAM,CAACe,IAAX,EAAiB;AACfD,MAAAA,IAAI,gCAAOA,IAAP,sBAAgBd,MAAM,CAACe,IAAvB,EAAJ;AACD;AACF,GAJD;AAMA,SAAO;AACLD,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,GAAG,EAAE;AAFA,GAAP;AAID,CAbD;;AAeA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAArB,OAAO,EAAI;AAC5B,MAAMsB,OAAO,GAAG,EAAhB;AAEAtB,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIA,MAAM,CAACkB,OAAX,EAAoB;AAClBA,MAAAA,OAAO,CAACxB,IAAR,CAAaM,MAAM,CAACkB,OAApB;AACD;AACF,GAJD;AAMA,SAAOA,OAAP;AACD,CAVD;;AAYA,OAAO,IAAMC,YAAY,GAAGnD,KAAK,CAACoD,aAAN,CAAoB,EAApB,CAArB;;IAEcC,K;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AADiB,QAGT1B,OAHS,GAGG,MAAK0B,KAHR,CAGT1B,OAHS;AAKjB,UAAKA,OAAL,GAAeD,cAAc,CAACC,OAAD,CAA7B;AALiB;AAMlB;;;;6BAEQ;AAAA,UACC2B,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAGP,0BACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEjB,gBAAgB,CAAC,KAAKV,OAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,KAAK0B,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEL,UAAU,CAAC,KAAKrB,OAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAET,OADX;AAEE,QAAA,MAAM,EAAEwB,SAAS,CAAC,KAAKf,OAAN,CAFnB;AAGE,QAAA,IAAI,EAAEiB,OAAO,CAAC,KAAKjB,OAAN,CAHf;AAIE,QAAA,KAAK,EAAE2B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF;AAcD;;;;EA1BgCtD,S;;SAAdoD,K","sourcesContent":["import React, { Component } from 'react'\nimport { logger } from 'redux-logger'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { createBrowserHistory } from 'history'\nimport * as serviceWorker from '../../../serviceWorker'\n\nimport Router from '../Router'\nimport Localization from '../Localization'\nimport defaultModules from '../../../modules'\nimport initReducers from '../../../redux/reducers'\nimport initSagas from '../../../redux/sagas'\n\nimport { IntlReduxMiddleware } from '../Localization/IntlReduxMiddleware'\n\n// app styles\nimport '../../../assets/styles/global.scss'\n\n// disable cache-first approach\nserviceWorker.unregister()\n\nconst history = createBrowserHistory()\nconst sagaMiddleware = createSagaMiddleware()\nconst routeMiddleware = routerMiddleware(history)\nconst middlewares = [IntlReduxMiddleware, thunk, sagaMiddleware, routeMiddleware]\n\n// Redux Logger\nif (process.env.REACT_APP_REDUX_LOGGER === 'true') {\n  middlewares.push(logger)\n}\n\nconst processModules = (modules = []) => {\n  modules = [...defaultModules, ...modules]\n\n  // ensure module uniqueness and correct ordering\n  const processedModules = new Map()\n\n  modules.forEach(module => {\n    processedModules.set(module.name, module)\n  })\n\n  return Array.from(processedModules.values())\n}\n\nconst createAdminStore = modules => {\n  let reducers = {}\n  let sagas = []\n\n  modules.forEach(module => {\n    if (module.reducers) {\n      reducers = {\n        ...reducers,\n        ...module.reducers,\n      }\n    }\n\n    if (module.sagas) {\n      sagas = [...sagas, ...module.sagas]\n    }\n  })\n\n  const store = createStore(\n    initReducers({ history }, reducers),\n    compose(applyMiddleware(...middlewares)),\n  )\n  sagaMiddleware.run(initSagas({}, sagas))\n\n  return store\n}\n\nconst getRoutes = modules => {\n  let routes = []\n\n  modules.forEach(module => {\n    if (module.routes) {\n      routes = [...routes, ...module.routes]\n    }\n  })\n\n  return routes\n}\n\nconst getMenu = modules => {\n  let left = []\n\n  modules.forEach(module => {\n    if (module.menu) {\n      left = [...left, ...module.menu]\n    }\n  })\n\n  return {\n    left,\n    top: [],\n  }\n}\n\nconst getLocales = modules => {\n  const locales = []\n\n  modules.forEach(module => {\n    if (module.locales) {\n      locales.push(module.locales)\n    }\n  })\n\n  return locales\n}\n\nexport const AdminContext = React.createContext({})\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props)\n\n    const { modules } = this.props\n\n    this.modules = processModules(modules)\n  }\n\n  render() {\n    const { title } = this.props\n\n    return (\n      <Provider store={createAdminStore(this.modules)}>\n        <AdminContext.Provider value={this.props}>\n          <Localization locales={getLocales(this.modules)}>\n            <Router\n              history={history}\n              routes={getRoutes(this.modules)}\n              menu={getMenu(this.modules)}\n              title={title}\n            />\n          </Localization>\n        </AdminContext.Provider>\n      </Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}