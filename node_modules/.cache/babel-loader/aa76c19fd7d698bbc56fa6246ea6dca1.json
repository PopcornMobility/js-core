{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { warning } from \"rc-util/es/warning\";\nimport * as React from 'react';\n\nvar fullClone = _objectSpread({}, React);\n\nvar useInsertionEffect = fullClone.useInsertionEffect; // DO NOT register functions in useEffect cleanup function, or functions that registered will never be called.\n\nvar useCleanupRegister = function useCleanupRegister(deps) {\n  var effectCleanups = [];\n  var cleanupFlag = false;\n\n  function register(fn) {\n    if (cleanupFlag) {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(false, '[Ant Design CSS-in-JS] You are registering a cleanup function after unmount, which will not have any effect.');\n      }\n\n      return;\n    }\n\n    effectCleanups.push(fn);\n  }\n\n  React.useEffect(function () {\n    // Compatible with strict mode\n    cleanupFlag = false;\n    return function () {\n      cleanupFlag = true;\n\n      if (effectCleanups.length) {\n        effectCleanups.forEach(function (fn) {\n          return fn();\n        });\n      }\n    };\n  }, deps);\n  return register;\n};\n\nvar useRun = function useRun() {\n  return function (fn) {\n    fn();\n  };\n}; // Only enable register in React 18\n\n\nvar useEffectCleanupRegister = typeof useInsertionEffect !== 'undefined' ? useCleanupRegister : useRun;\nexport default useEffectCleanupRegister;","map":null,"metadata":{},"sourceType":"module"}