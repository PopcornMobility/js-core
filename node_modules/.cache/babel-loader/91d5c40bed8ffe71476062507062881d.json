{"ast":null,"code":"import _regeneratorRuntime from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(REQUEST),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(SUCCESS),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { notification } from 'antd';\nimport { all, takeLatest, put } from 'redux-saga/effects';\nimport { actions, success } from './actions';\n\nfunction REQUEST(payload) {\n  return _regeneratorRuntime.wrap(function REQUEST$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log('REQUEST', payload);\n\n        case 2:\n          _context.next = 4;\n          return put(success(payload.payload));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction SUCCESS(payload) {\n  return _regeneratorRuntime.wrap(function SUCCESS$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return console.log('SUCCESS', payload);\n\n        case 2:\n          _context2.next = 4;\n          return notification.success({\n            message: 'YAAAAY',\n            description: payload.intl.formatMessage({\n              id: 'reduxSagaIntl.trigger'\n            })\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeLatest(actions.REQUEST, REQUEST), takeLatest(actions.SUCCESS, SUCCESS)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/testModules/dashboard/redux/reduxSagaIntl/sagas.js"],"names":["REQUEST","SUCCESS","rootSaga","notification","all","takeLatest","put","actions","success","payload","console","log","message","description","intl","formatMessage","id"],"mappings":";;oDAIUA,O;qDAMAC,O;qDASeC,Q;;AAnBzB,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;;AAEA,SAAUR,OAAV,CAAkBS,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB,CAAN;;AADF;AAAA;AAGE,iBAAMH,GAAG,CAACE,OAAO,CAACC,OAAO,CAACA,OAAT,CAAR,CAAT;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUR,OAAV,CAAkBQ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB,CAAN;;AADF;AAAA;AAGE,iBAAMN,YAAY,CAACK,OAAb,CAAqB;AACzBI,YAAAA,OAAO,EAAE,QADgB;AAEzBC,YAAAA,WAAW,EAAEJ,OAAO,CAACK,IAAR,CAAaC,aAAb,CAA2B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA3B;AAFY,WAArB,CAAN;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUd,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CAACC,UAAU,CAACE,OAAO,CAACP,OAAT,EAAkBA,OAAlB,CAAX,EAAuCK,UAAU,CAACE,OAAO,CAACN,OAAT,EAAkBA,OAAlB,CAAjD,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { notification } from 'antd'\nimport { all, takeLatest, put } from 'redux-saga/effects'\nimport { actions, success } from './actions'\n\nfunction* REQUEST(payload) {\n  yield console.log('REQUEST', payload)\n\n  yield put(success(payload.payload))\n}\n\nfunction* SUCCESS(payload) {\n  yield console.log('SUCCESS', payload)\n\n  yield notification.success({\n    message: 'YAAAAY',\n    description: payload.intl.formatMessage({ id: 'reduxSagaIntl.trigger' }),\n  })\n}\n\nexport default function* rootSaga() {\n  yield all([takeLatest(actions.REQUEST, REQUEST), takeLatest(actions.SUCCESS, SUCCESS)])\n}\n"]},"metadata":{},"sourceType":"module"}