{"ast":null,"code":"import _toConsumableArray from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Loadable } from '../../components/core/Router';\nimport { API, ADMIN_ROLES } from '../../utils/constants';\nimport user from '../../redux/user/reducers';\nimport userSaga from '../../redux/user/sagas';\nimport networkSaga from '../../redux/network/sagas';\nvar defaultAuthConfig = {\n  url: API.LOGIN,\n  adminRoles: ADMIN_ROLES,\n  extraParams: {},\n  overrideUi: false,\n  transformPayload: function transformPayload(payload) {\n    if (!payload) return {};\n    var transformedPayload = {\n      token: payload.accessToken\n    };\n\n    if (payload.user) {\n      transformedPayload = _objectSpread({}, transformedPayload, {\n        id: payload.user.id,\n        name: payload.user.first_name,\n        email: payload.user.email\n      });\n    }\n\n    if (payload.roles) {\n      transformedPayload = _objectSpread({}, transformedPayload, {\n        roles: payload.roles.map(function (role) {\n          return role.name;\n        })\n      });\n    }\n\n    if (payload.permissions) {\n      transformedPayload = _objectSpread({}, transformedPayload, {\n        permissions: payload.permissions.map(function (permission) {\n          return permission.name;\n        })\n      });\n    }\n\n    return transformedPayload;\n  }\n};\nexport default (function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  config = _objectSpread({}, defaultAuthConfig, config);\n  return {\n    name: 'core',\n    routes: _toConsumableArray(config.overrideUi !== true ? [{\n      path: '/auth/login',\n      component: Loadable(function () {\n        return import('pages/auth/login');\n      }),\n      exact: true\n    }] : []),\n    reducers: {\n      user: user(config)\n    },\n    sagas: [userSaga(config), networkSaga(config)]\n  };\n});","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/modules/core/index.js"],"names":["Loadable","API","ADMIN_ROLES","user","userSaga","networkSaga","defaultAuthConfig","url","LOGIN","adminRoles","extraParams","overrideUi","transformPayload","payload","transformedPayload","token","accessToken","id","name","first_name","email","roles","map","role","permissions","permission","config","routes","path","component","exact","reducers","sagas"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,8BAAzB;AAEA,SAASC,GAAT,EAAcC,WAAd,QAAiC,uBAAjC;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAEN,GAAG,CAACO,KADe;AAExBC,EAAAA,UAAU,EAAEP,WAFY;AAGxBQ,EAAAA,WAAW,EAAE,EAHW;AAIxBC,EAAAA,UAAU,EAAE,KAJY;AAKxBC,EAAAA,gBAAgB,EAAE,0BAAAC,OAAO,EAAI;AAC3B,QAAI,CAACA,OAAL,EAAc,OAAO,EAAP;AAEd,QAAIC,kBAAkB,GAAG;AACvBC,MAAAA,KAAK,EAAEF,OAAO,CAACG;AADQ,KAAzB;;AAIA,QAAIH,OAAO,CAACV,IAAZ,EAAkB;AAChBW,MAAAA,kBAAkB,qBACbA,kBADa;AAEhBG,QAAAA,EAAE,EAAEJ,OAAO,CAACV,IAAR,CAAac,EAFD;AAGhBC,QAAAA,IAAI,EAAEL,OAAO,CAACV,IAAR,CAAagB,UAHH;AAIhBC,QAAAA,KAAK,EAAEP,OAAO,CAACV,IAAR,CAAaiB;AAJJ,QAAlB;AAMD;;AAED,QAAIP,OAAO,CAACQ,KAAZ,EAAmB;AACjBP,MAAAA,kBAAkB,qBACbA,kBADa;AAEhBO,QAAAA,KAAK,EAAER,OAAO,CAACQ,KAAR,CAAcC,GAAd,CAAkB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACL,IAAT;AAAA,SAAtB;AAFS,QAAlB;AAID;;AAED,QAAIL,OAAO,CAACW,WAAZ,EAAyB;AACvBV,MAAAA,kBAAkB,qBACbA,kBADa;AAEhBU,QAAAA,WAAW,EAAEX,OAAO,CAACW,WAAR,CAAoBF,GAApB,CAAwB,UAAAG,UAAU;AAAA,iBAAIA,UAAU,CAACP,IAAf;AAAA,SAAlC;AAFG,QAAlB;AAID;;AAED,WAAOJ,kBAAP;AACD;AApCuB,CAA1B;AAuCA,gBAAe,YAAiB;AAAA,MAAhBY,MAAgB,uEAAP,EAAO;AAC9BA,EAAAA,MAAM,qBACDpB,iBADC,EAEDoB,MAFC,CAAN;AAKA,SAAO;AACLR,IAAAA,IAAI,EAAE,MADD;AAELS,IAAAA,MAAM,qBACAD,MAAM,CAACf,UAAP,KAAsB,IAAtB,GACA,CACE;AACEiB,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,SAAS,EAAE7B,QAAQ,CAAC;AAAA,eAAM,OAAO,kBAAP,CAAN;AAAA,OAAD,CAFrB;AAGE8B,MAAAA,KAAK,EAAE;AAHT,KADF,CADA,GAQA,EATA,CAFD;AAaLC,IAAAA,QAAQ,EAAE;AAAE5B,MAAAA,IAAI,EAAEA,IAAI,CAACuB,MAAD;AAAZ,KAbL;AAcLM,IAAAA,KAAK,EAAE,CAAC5B,QAAQ,CAACsB,MAAD,CAAT,EAAmBrB,WAAW,CAACqB,MAAD,CAA9B;AAdF,GAAP;AAgBD,CAtBD","sourcesContent":["import { Loadable } from '../../components/core/Router'\n\nimport { API, ADMIN_ROLES } from '../../utils/constants'\n\nimport user from '../../redux/user/reducers'\nimport userSaga from '../../redux/user/sagas'\n\nimport networkSaga from '../../redux/network/sagas'\n\nconst defaultAuthConfig = {\n  url: API.LOGIN,\n  adminRoles: ADMIN_ROLES,\n  extraParams: {},\n  overrideUi: false,\n  transformPayload: payload => {\n    if (!payload) return {}\n\n    let transformedPayload = {\n      token: payload.accessToken,\n    }\n\n    if (payload.user) {\n      transformedPayload = {\n        ...transformedPayload,\n        id: payload.user.id,\n        name: payload.user.first_name,\n        email: payload.user.email,\n      }\n    }\n\n    if (payload.roles) {\n      transformedPayload = {\n        ...transformedPayload,\n        roles: payload.roles.map(role => role.name),\n      }\n    }\n\n    if (payload.permissions) {\n      transformedPayload = {\n        ...transformedPayload,\n        permissions: payload.permissions.map(permission => permission.name),\n      }\n    }\n\n    return transformedPayload\n  },\n}\n\nexport default (config = {}) => {\n  config = {\n    ...defaultAuthConfig,\n    ...config,\n  }\n\n  return {\n    name: 'core',\n    routes: [\n      ...(config.overrideUi !== true\n        ? [\n            {\n              path: '/auth/login',\n              component: Loadable(() => import('pages/auth/login')),\n              exact: true,\n            },\n          ]\n        : []),\n    ],\n    reducers: { user: user(config) },\n    sagas: [userSaga(config), networkSaga(config)],\n  }\n}\n"]},"metadata":{},"sourceType":"module"}