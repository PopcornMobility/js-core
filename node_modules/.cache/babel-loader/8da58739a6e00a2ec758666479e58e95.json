{"ast":null,"code":"import _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/generic/Form/index.js\";\n\nimport React from 'react';\nimport { Form as AntForm, Input, Button, Select, DatePicker, InputNumber, Checkbox, Upload, TimePicker, AutoComplete, Row, Col } from 'antd';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport QRScanner from '../QRScanner';\nimport countries from './countries.json';\nimport './style.css';\nimport RemoteSelect from './remoteSelect';\nvar formItemLayout = {\n  labelCol: {\n    md: 8\n  },\n  wrapperCol: {\n    md: 12\n  }\n};\n\nvar formTailLayout = function formTailLayout(layout) {\n  return {\n    wrapperCol: layout || {\n      md: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n};\n\nvar Form = (_dec = AntForm.create(), _dec(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.processValues = function (values) {\n      var legacy = _this.props.legacy;\n\n      if (legacy) {\n        var _processed = {};\n        Object.keys(values).forEach(function (key) {\n          _processed[key] = values[key] === null || values[key] === '' ? undefined : values[key];\n        });\n        return _processed;\n      }\n\n      var processed = {};\n      Object.keys(values).forEach(function (key) {\n        processed[key] = _.isUndefined(values[key]) ? null : values[key];\n      });\n      return processed;\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          form = _this$props.form,\n          onSubmit = _this$props.onSubmit,\n          onError = _this$props.onError;\n      form.validateFields(function (errors, values) {\n        if (!errors && onSubmit) {\n          onSubmit(_this.processValues(values));\n        } else if (onError) {\n          onError(errors);\n        }\n      });\n    };\n\n    _this.handleOnChange = function (field) {\n      var _this$props2 = _this.props,\n          _this$props2$form = _this$props2.form,\n          getFieldsValue = _this$props2$form.getFieldsValue,\n          setFieldsValue = _this$props2$form.setFieldsValue,\n          onChange = _this$props2.onChange;\n\n      if (onChange) {\n        // handle state update delays\n        setTimeout(function () {\n          onChange(field, getFieldsValue(), setFieldsValue);\n        }, 1);\n      }\n    };\n\n    _this.getQRScanner = function (field) {\n      var setFieldsValue = _this.props.form.setFieldsValue;\n\n      var handleScan = function handleScan(data) {\n        if (data) {\n          setFieldsValue(_defineProperty({}, field, data)); // manually trigger on change after scan\n\n          _this.handleOnChange(field);\n        }\n      };\n\n      return /*#__PURE__*/React.createElement(QRScanner, {\n        className: \"ant-input-search-button\",\n        onScan: handleScan,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.getSelectItem = function (itemConfig) {\n      var field = itemConfig.field,\n          type = itemConfig.type,\n          placeholder = itemConfig.placeholder,\n          options = itemConfig.options,\n          disabled = itemConfig.disabled,\n          rest = _objectWithoutProperties(itemConfig, [\"field\", \"type\", \"placeholder\", \"options\", \"disabled\"]);\n\n      var select = function select(mode) {\n        return /*#__PURE__*/React.createElement(Select, Object.assign({\n          mode: mode,\n          showSearch: true,\n          placeholder: placeholder,\n          disabled: disabled,\n          onChange: function onChange() {\n            return _this.handleOnChange(field);\n          },\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          }\n        }, rest, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }\n        }), options.map(function (option) {\n          var isString = !_.isObject(option);\n          return /*#__PURE__*/React.createElement(Select.Option, {\n            key: option,\n            value: isString ? option : option.value,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }\n          }, isString ? option : option.text);\n        }));\n      };\n\n      return select(type);\n    };\n\n    _this.getCountrySelectItem = function (itemConfig) {\n      var longNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _this.getSelectItem(_objectSpread({}, itemConfig, {\n        type: 'select',\n        options: longNames ? countries : countries.map(function (country) {\n          return country.value;\n        })\n      }));\n    };\n\n    _this.getPrefixSelector = function () {\n      var _this$props3 = _this.props,\n          getFieldDecorator = _this$props3.form.getFieldDecorator,\n          values = _this$props3.values;\n      return getFieldDecorator('country_code', {\n        initialValue: values && values.country_code || 'RO'\n      })(_this.getCountrySelectItem());\n    };\n\n    _this.fileUploadEvent = function (e) {\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    _this.getItem = function (itemConfig) {\n      var field = itemConfig.field,\n          type = itemConfig.type,\n          placeholder = itemConfig.placeholder,\n          disabled = itemConfig.disabled,\n          antdProps = itemConfig.antdProps,\n          rest = _objectWithoutProperties(itemConfig, [\"field\", \"type\", \"placeholder\", \"disabled\", \"antdProps\"]);\n\n      switch (type) {\n        case 'remoteSelect':\n          return /*#__PURE__*/React.createElement(RemoteSelect, {\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            },\n            itemConfig: itemConfig,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 16\n            }\n          });\n\n        case 'select':\n        case 'tags':\n        case 'multiple':\n          return _this.getSelectItem(itemConfig);\n\n        case 'country':\n          return _this.getCountrySelectItem(itemConfig, true);\n\n        case 'phone':\n          return /*#__PURE__*/React.createElement(Input, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            addonBefore: _this.getPrefixSelector(),\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 11\n            }\n          }));\n\n        case 'date':\n          return /*#__PURE__*/React.createElement(DatePicker, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }\n          }));\n\n        case 'time':\n          return /*#__PURE__*/React.createElement(TimePicker, Object.assign({\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            },\n            placeholder: placeholder,\n            disabled: disabled\n          }, antdProps, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 11\n            }\n          }));\n\n        case 'number':\n          return /*#__PURE__*/React.createElement(InputNumber, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 11\n            }\n          }));\n\n        case 'qrcode':\n          return /*#__PURE__*/React.createElement(Input, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            addonAfter: _this.getQRScanner(field),\n            className: \"ant-input-search-enter-button\",\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 11\n            }\n          }));\n\n        case 'textarea':\n          return /*#__PURE__*/React.createElement(Input.TextArea, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 16\n            }\n          }));\n\n        case 'password':\n          return /*#__PURE__*/React.createElement(Input.Password, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 11\n            }\n          }));\n\n        case 'checkbox':\n          return /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 11\n            }\n          }), placeholder);\n\n        case 'file':\n          return /*#__PURE__*/React.createElement(Upload, Object.assign({\n            name: \"file\",\n            disabled: disabled\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(Button, {\n            icon: \"upload\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }\n          }, placeholder));\n\n        case 'autocomplete':\n          return /*#__PURE__*/React.createElement(AutoComplete, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 11\n            }\n          }));\n\n        case 'custom':\n          return null;\n\n        default:\n          return /*#__PURE__*/React.createElement(Input, Object.assign({\n            placeholder: placeholder,\n            disabled: disabled,\n            onChange: function onChange() {\n              return _this.handleOnChange(field);\n            }\n          }, rest, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 11\n            }\n          }));\n      }\n    };\n\n    _this.getExtraProps = function (type) {\n      switch (type) {\n        case 'checkbox':\n          return {\n            valuePropName: 'checked'\n          };\n\n        case 'file':\n          return {\n            valuePropName: 'fileList',\n            getValueFromEvent: _this.fileUploadEvent\n          };\n\n        default:\n          return {\n            valuePropName: 'value'\n          };\n      }\n    };\n\n    _this.getFormItem = function (itemConfig, isSubItem) {\n      var _this$props4 = _this.props,\n          form = _this$props4.form,\n          errors = _this$props4.errors,\n          values = _this$props4.values,\n          columnLayout = _this$props4.columnLayout;\n      var field = itemConfig.field,\n          label = itemConfig.label,\n          type = itemConfig.type,\n          rules = itemConfig.rules,\n          items = itemConfig.items,\n          render = itemConfig.render,\n          itemLayout = itemConfig.layout;\n      var props = itemConfig.props,\n          initialValue = itemConfig.initialValue;\n      var layout = itemLayout || columnLayout || {\n        span: 24\n      };\n\n      if (type === 'custom') {\n        return /*#__PURE__*/React.createElement(Col, Object.assign({\n          key: field\n        }, layout, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(AntForm.Item, Object.assign({\n          label: label,\n          className: isSubItem ? 'mb-0' : null\n        }, props, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }\n        }), render && render(form)));\n      } // adjust value prop name, depending on input type\n\n\n      var extraProps = _this.getExtraProps(type); // set field errors, if any\n\n\n      if (errors && errors[field]) {\n        props = _objectSpread({}, props, {\n          help: errors[field],\n          validateStatus: 'error'\n        });\n      } // set field values, based on values array\n      // note: initialValue will be overridden\n\n\n      if (values) {\n        // This should enable field names like: 'a[0].b.c' to support arrays and objects\n        initialValue = _.get(values, field);\n\n        if (type === 'date' && initialValue) {\n          initialValue = moment(initialValue);\n        }\n\n        if (type === 'time' && initialValue) {\n          var format = 'HH:mm:ss';\n\n          if (itemConfig.antdProps && itemConfig.antdProps.format) {\n            // eslint-disable-next-line prefer-destructuring\n            format = itemConfig.antdProps.format;\n          }\n\n          initialValue = moment(initialValue, format);\n        }\n      }\n\n      var fieldDecoratorOptions = _objectSpread({\n        rules: rules,\n        initialValue: initialValue\n      }, extraProps);\n\n      return /*#__PURE__*/React.createElement(Col, Object.assign({\n        key: field\n      }, layout, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(AntForm.Item, Object.assign({\n        label: label\n      }, props, {\n        className: isSubItem ? 'mb-0' : null,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }\n      }), !items && form.getFieldDecorator(field, fieldDecoratorOptions)(_this.getItem(itemConfig)), items && items.map(function (subItemConfig) {\n        return _this.getFormItem(subItemConfig, true);\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          loading = _this$props5.loading,\n          submitText = _this$props5.submitText,\n          compact = _this$props5.compact,\n          submitType = _this$props5.submitType,\n          submitBlock = _this$props5.submitBlock,\n          children = _this$props5.children,\n          sectionConfig = _this$props5.sectionConfig,\n          sectionLayout = _this$props5.sectionLayout,\n          submitLayout = _this$props5.submitLayout;\n      var _this$props6 = this.props,\n          config = _this$props6.config,\n          layout = _this$props6.layout; // filter items based on hidden prop\n\n      config = config && config.filter(function (item) {\n        return item.hidden !== true;\n      }); // backwords compatibility with older versions\n\n      if (compact) {\n        layout = 'vertical';\n      }\n\n      return /*#__PURE__*/React.createElement(AntForm, Object.assign({}, (!layout || layout === 'horizontal') && formItemLayout, {\n        hideRequiredMark: true,\n        onSubmit: this.handleSubmit,\n        layout: layout,\n        className: layout !== 'inline' && 'mb-4',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 7\n        }\n      }), !sectionConfig && /*#__PURE__*/React.createElement(Row, {\n        gutter: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, config.map(function (itemConfig) {\n        return _this2.getFormItem(itemConfig);\n      })), sectionConfig && sectionConfig.map(function (section, index) {\n        var _ref = sectionLayout || {\n          title: {\n            md: 24,\n            lg: 8\n          },\n          wrapper: {\n            md: 24,\n            lg: 16\n          }\n        },\n            title = _ref.title,\n            wrapper = _ref.wrapper;\n\n        var subConfig = section.config;\n        subConfig = subConfig && subConfig.filter(function (item) {\n          return item.hidden !== true;\n        });\n        return /*#__PURE__*/React.createElement(Row, {\n          key: section.key || section.title || index,\n          gutter: [32, 32],\n          style: {\n            borderBottom: '1px solid #F0F0F0'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Col, Object.assign({}, title, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 16,\n            fontWeight: 'bold'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 19\n          }\n        }, section.title)), /*#__PURE__*/React.createElement(Col, Object.assign({}, wrapper, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          gutter: 32,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 19\n          }\n        }, subConfig.map(function (itemConfig) {\n          return _this2.getFormItem(itemConfig);\n        }))));\n      }), children, /*#__PURE__*/React.createElement(AntForm.Item, Object.assign({}, formTailLayout(compact ? {\n        span: 24\n      } : submitLayout), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: submitType || 'primary',\n        htmlType: \"submit\",\n        block: submitBlock,\n        loading: loading,\n        className: sectionConfig && 'mt-4',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, submitText || 'Submit')));\n    }\n  }]);\n\n  return Form;\n}(React.Component), _temp)) || _class);\nexport default Form;","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/generic/Form/index.js"],"names":["React","Form","AntForm","Input","Button","Select","DatePicker","InputNumber","Checkbox","Upload","TimePicker","AutoComplete","Row","Col","moment","_","QRScanner","countries","RemoteSelect","formItemLayout","labelCol","md","wrapperCol","formTailLayout","layout","span","offset","create","processValues","values","legacy","props","processed","Object","keys","forEach","key","undefined","isUndefined","handleSubmit","e","preventDefault","form","onSubmit","onError","validateFields","errors","handleOnChange","field","getFieldsValue","setFieldsValue","onChange","setTimeout","getQRScanner","handleScan","data","getSelectItem","itemConfig","type","placeholder","options","disabled","rest","select","mode","input","option","children","toLowerCase","indexOf","map","isString","isObject","value","text","getCountrySelectItem","longNames","country","getPrefixSelector","getFieldDecorator","initialValue","country_code","fileUploadEvent","Array","isArray","fileList","getItem","antdProps","getExtraProps","valuePropName","getValueFromEvent","getFormItem","isSubItem","columnLayout","label","rules","items","render","itemLayout","extraProps","help","validateStatus","get","format","fieldDecoratorOptions","subItemConfig","loading","submitText","compact","submitType","submitBlock","sectionConfig","sectionLayout","submitLayout","config","filter","item","hidden","section","index","title","lg","wrapper","subConfig","borderBottom","fontSize","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Form as AntForm,\n  Input,\n  Button,\n  Select,\n  DatePicker,\n  InputNumber,\n  Checkbox,\n  Upload,\n  TimePicker,\n  AutoComplete,\n  Row,\n  Col,\n} from 'antd'\nimport moment from 'moment'\nimport _ from 'lodash'\n\nimport QRScanner from '../QRScanner'\nimport countries from './countries.json'\nimport './style.css'\nimport RemoteSelect from './remoteSelect'\n\nconst formItemLayout = {\n  labelCol: { md: 8 },\n  wrapperCol: { md: 12 },\n}\n\nconst formTailLayout = layout => ({\n  wrapperCol: layout || { md: { span: 16, offset: 8 } },\n})\n\n@AntForm.create()\nclass Form extends React.Component {\n  processValues = values => {\n    const { legacy } = this.props\n\n    if (legacy) {\n      const processed = {}\n      Object.keys(values).forEach(key => {\n        processed[key] = values[key] === null || values[key] === '' ? undefined : values[key]\n      })\n      return processed\n    }\n\n    const processed = {}\n    Object.keys(values).forEach(key => {\n      processed[key] = _.isUndefined(values[key]) ? null : values[key]\n    })\n\n    return processed\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n\n    const { form, onSubmit, onError } = this.props\n\n    form.validateFields((errors, values) => {\n      if (!errors && onSubmit) {\n        onSubmit(this.processValues(values))\n      } else if (onError) {\n        onError(errors)\n      }\n    })\n  }\n\n  handleOnChange = field => {\n    const {\n      form: { getFieldsValue, setFieldsValue },\n      onChange,\n    } = this.props\n\n    if (onChange) {\n      // handle state update delays\n      setTimeout(() => {\n        onChange(field, getFieldsValue(), setFieldsValue)\n      }, 1)\n    }\n  }\n\n  getQRScanner = field => {\n    const {\n      form: { setFieldsValue },\n    } = this.props\n\n    const handleScan = data => {\n      if (data) {\n        setFieldsValue({\n          [field]: data,\n        })\n        // manually trigger on change after scan\n        this.handleOnChange(field)\n      }\n    }\n\n    return <QRScanner className=\"ant-input-search-button\" onScan={handleScan} />\n  }\n\n  getSelectItem = itemConfig => {\n    const { field, type, placeholder, options, disabled, ...rest } = itemConfig\n\n    const select = mode => (\n      <Select\n        mode={mode}\n        showSearch\n        placeholder={placeholder}\n        disabled={disabled}\n        onChange={() => this.handleOnChange(field)}\n        filterOption={(input, option) =>\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        {...rest}\n      >\n        {options.map(option => {\n          const isString = !_.isObject(option)\n\n          return (\n            <Select.Option key={option} value={isString ? option : option.value}>\n              {isString ? option : option.text}\n            </Select.Option>\n          )\n        })}\n      </Select>\n    )\n\n    return select(type)\n  }\n\n  getCountrySelectItem = (itemConfig, longNames = false) => {\n    return this.getSelectItem({\n      ...itemConfig,\n      type: 'select',\n      options: longNames ? countries : countries.map(country => country.value),\n    })\n  }\n\n  getPrefixSelector = () => {\n    const {\n      form: { getFieldDecorator },\n      values,\n    } = this.props\n\n    return getFieldDecorator('country_code', {\n      initialValue: (values && values.country_code) || 'RO',\n    })(this.getCountrySelectItem())\n  }\n\n  fileUploadEvent = e => {\n    if (Array.isArray(e)) {\n      return e\n    }\n    return e && e.fileList\n  }\n\n  getItem = itemConfig => {\n    const { field, type, placeholder, disabled, antdProps, ...rest } = itemConfig\n\n    switch (type) {\n      case 'remoteSelect':\n        return <RemoteSelect onChange={() => this.handleOnChange(field)} itemConfig={itemConfig} />\n      case 'select':\n      case 'tags':\n      case 'multiple':\n        return this.getSelectItem(itemConfig)\n      case 'country':\n        return this.getCountrySelectItem(itemConfig, true)\n      case 'phone':\n        return (\n          <Input\n            placeholder={placeholder}\n            disabled={disabled}\n            addonBefore={this.getPrefixSelector()}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'date':\n        return (\n          <DatePicker\n            placeholder={placeholder}\n            disabled={disabled}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'time':\n        return (\n          <TimePicker\n            onChange={() => this.handleOnChange(field)}\n            placeholder={placeholder}\n            disabled={disabled}\n            {...antdProps}\n          />\n        )\n      case 'number':\n        return (\n          <InputNumber\n            placeholder={placeholder}\n            disabled={disabled}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'qrcode':\n        return (\n          <Input\n            placeholder={placeholder}\n            disabled={disabled}\n            addonAfter={this.getQRScanner(field)}\n            className=\"ant-input-search-enter-button\"\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'textarea':\n        return <Input.TextArea placeholder={placeholder} disabled={disabled} {...rest} />\n      case 'password':\n        return (\n          <Input.Password\n            placeholder={placeholder}\n            disabled={disabled}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'checkbox':\n        return (\n          <Checkbox disabled={disabled} onChange={() => this.handleOnChange(field)} {...rest}>\n            {placeholder}\n          </Checkbox>\n        )\n      case 'file':\n        return (\n          <Upload name=\"file\" disabled={disabled} {...rest}>\n            <Button icon=\"upload\">{placeholder}</Button>\n          </Upload>\n        )\n      case 'autocomplete':\n        return (\n          <AutoComplete\n            placeholder={placeholder}\n            disabled={disabled}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n      case 'custom':\n        return null\n      default:\n        return (\n          <Input\n            placeholder={placeholder}\n            disabled={disabled}\n            onChange={() => this.handleOnChange(field)}\n            {...rest}\n          />\n        )\n    }\n  }\n\n  getExtraProps = type => {\n    switch (type) {\n      case 'checkbox':\n        return { valuePropName: 'checked' }\n      case 'file':\n        return { valuePropName: 'fileList', getValueFromEvent: this.fileUploadEvent }\n      default:\n        return { valuePropName: 'value' }\n    }\n  }\n\n  getFormItem = (itemConfig, isSubItem) => {\n    const { form, errors, values, columnLayout } = this.props\n    const { field, label, type, rules, items, render, layout: itemLayout } = itemConfig\n    let { props, initialValue } = itemConfig\n\n    const layout = itemLayout || columnLayout || { span: 24 }\n\n    if (type === 'custom') {\n      return (\n        <Col key={field} {...layout}>\n          <AntForm.Item label={label} className={isSubItem ? 'mb-0' : null} {...props}>\n            {render && render(form)}\n          </AntForm.Item>\n        </Col>\n      )\n    }\n\n    // adjust value prop name, depending on input type\n    const extraProps = this.getExtraProps(type)\n\n    // set field errors, if any\n    if (errors && errors[field]) {\n      props = {\n        ...props,\n        help: errors[field],\n        validateStatus: 'error',\n      }\n    }\n\n    // set field values, based on values array\n    // note: initialValue will be overridden\n    if (values) {\n      // This should enable field names like: 'a[0].b.c' to support arrays and objects\n      initialValue = _.get(values, field)\n\n      if (type === 'date' && initialValue) {\n        initialValue = moment(initialValue)\n      }\n\n      if (type === 'time' && initialValue) {\n        let format = 'HH:mm:ss'\n\n        if (itemConfig.antdProps && itemConfig.antdProps.format) {\n          // eslint-disable-next-line prefer-destructuring\n          format = itemConfig.antdProps.format\n        }\n\n        initialValue = moment(initialValue, format)\n      }\n    }\n\n    const fieldDecoratorOptions = { rules, initialValue, ...extraProps }\n\n    return (\n      <Col key={field} {...layout}>\n        <AntForm.Item label={label} {...props} className={isSubItem ? 'mb-0' : null}>\n          {!items && form.getFieldDecorator(field, fieldDecoratorOptions)(this.getItem(itemConfig))}\n          {items && items.map(subItemConfig => this.getFormItem(subItemConfig, true))}\n        </AntForm.Item>\n      </Col>\n    )\n  }\n\n  render() {\n    const {\n      loading,\n      submitText,\n      compact,\n      submitType,\n      submitBlock,\n      children,\n      sectionConfig,\n      sectionLayout,\n      submitLayout,\n    } = this.props\n    let { config, layout } = this.props\n\n    // filter items based on hidden prop\n    config = config && config.filter(item => item.hidden !== true)\n\n    // backwords compatibility with older versions\n    if (compact) {\n      layout = 'vertical'\n    }\n\n    return (\n      <AntForm\n        {...((!layout || layout === 'horizontal') && formItemLayout)}\n        hideRequiredMark\n        onSubmit={this.handleSubmit}\n        layout={layout}\n        className={layout !== 'inline' && 'mb-4'}\n      >\n        {!sectionConfig && (\n          <Row gutter={32}>{config.map(itemConfig => this.getFormItem(itemConfig))}</Row>\n        )}\n\n        {sectionConfig &&\n          sectionConfig.map((section, index) => {\n            const { title, wrapper } = sectionLayout || {\n              title: { md: 24, lg: 8 },\n              wrapper: { md: 24, lg: 16 },\n            }\n            let { config: subConfig } = section\n\n            subConfig = subConfig && subConfig.filter(item => item.hidden !== true)\n\n            return (\n              <Row\n                key={section.key || section.title || index}\n                gutter={[32, 32]}\n                style={{ borderBottom: '1px solid #F0F0F0' }}\n              >\n                <Col {...title}>\n                  <div style={{ fontSize: 16, fontWeight: 'bold' }}>{section.title}</div>\n                </Col>\n                <Col {...wrapper}>\n                  <Row gutter={32}>{subConfig.map(itemConfig => this.getFormItem(itemConfig))}</Row>\n                </Col>\n              </Row>\n            )\n          })}\n\n        {children}\n\n        <AntForm.Item {...formTailLayout(compact ? { span: 24 } : submitLayout)}>\n          <Button\n            type={submitType || 'primary'}\n            htmlType=\"submit\"\n            block={submitBlock}\n            loading={loading}\n            className={sectionConfig && 'mt-4'}\n          >\n            {submitText || 'Submit'}\n          </Button>\n        </AntForm.Item>\n      </AntForm>\n    )\n  }\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}