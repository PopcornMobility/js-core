{"ast":null,"code":"import _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/core/Menu/index.js\";\n\nimport 'rc-drawer/assets/index.css';\nimport React from 'react';\nimport DrawerMenu from 'rc-drawer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MenuLeft from './MenuLeft';\nimport MenuTop from './MenuTop';\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  return {\n    isMenuTop: settings.isMenuTop,\n    isMobileMenuOpen: settings.isMobileMenuOpen,\n    isMobileView: settings.isMobileView,\n    isLightTheme: settings.isLightTheme\n  };\n};\n\nvar AppMenu = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppMenu, _React$Component);\n\n  function AppMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleOpen = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          isMobileMenuOpen = _this$props.isMobileMenuOpen;\n      document.querySelector('#root').setAttribute('style', !isMobileMenuOpen ? 'overflow: hidden; width: 100%; height: 100%;' : '');\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isMobileMenuOpen',\n          value: !isMobileMenuOpen\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isMenuTop = _this$props2.isMenuTop,\n          isMobileMenuOpen = _this$props2.isMobileMenuOpen,\n          isMobileView = _this$props2.isMobileView,\n          isLightTheme = _this$props2.isLightTheme,\n          _this$props2$menu = _this$props2.menu;\n      _this$props2$menu = _this$props2$menu === void 0 ? {} : _this$props2$menu;\n      var _this$props2$menu$lef = _this$props2$menu.left,\n          left = _this$props2$menu$lef === void 0 ? [] : _this$props2$menu$lef,\n          _this$props2$menu$top = _this$props2$menu.top,\n          top = _this$props2$menu$top === void 0 ? [] : _this$props2$menu$top;\n\n      var BootstrappedMenu = function BootstrappedMenu() {\n        if (isMobileView) {\n          return /*#__PURE__*/React.createElement(DrawerMenu, {\n            getContainer: null,\n            level: null,\n            open: isMobileMenuOpen,\n            onMaskClick: _this2.toggleOpen,\n            onHandleClick: _this2.toggleOpen,\n            className: isLightTheme ? 'drawer-light' : '',\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(MenuLeft, {\n            menu: left,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }\n          }));\n        }\n\n        if (isMenuTop) {\n          return /*#__PURE__*/React.createElement(MenuTop, {\n            menu: top,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 16\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(MenuLeft, {\n          menu: left,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }\n        });\n      };\n\n      return BootstrappedMenu();\n    }\n  }]);\n\n  return AppMenu;\n}(React.Component), _temp)) || _class) || _class);\nexport default AppMenu;","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/core/Menu/index.js"],"names":["React","DrawerMenu","connect","withRouter","MenuLeft","MenuTop","mapStateToProps","settings","isMenuTop","isMobileMenuOpen","isMobileView","isLightTheme","AppMenu","toggleOpen","props","dispatch","document","querySelector","setAttribute","type","payload","setting","value","menu","left","top","BootstrappedMenu","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,4BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAmB;AACzCC,IAAAA,SAAS,EAAED,QAAQ,CAACC,SADqB;AAEzCC,IAAAA,gBAAgB,EAAEF,QAAQ,CAACE,gBAFc;AAGzCC,IAAAA,YAAY,EAAEH,QAAQ,CAACG,YAHkB;AAIzCC,IAAAA,YAAY,EAAEJ,QAAQ,CAACI;AAJkB,GAAnB;AAAA,CAAxB;;IASMC,O,WADLV,OAAO,CAACI,eAAD,C,EADPH,U;;;;;;;;;;;;;;;;UAGCU,U,GAAa,YAAM;AAAA,wBACsB,MAAKC,KAD3B;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCN,gBADD,eACCA,gBADD;AAEjBO,MAAAA,QAAQ,CACLC,aADH,CACiB,OADjB,EAEGC,YAFH,CAGI,OAHJ,EAII,CAACT,gBAAD,GAAoB,8CAApB,GAAqE,EAJzE;AAMAM,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,kBADF;AAEPC,UAAAA,KAAK,EAAE,CAACb;AAFD;AAFF,OAAD,CAAR;AAOD,K;;;;;;;6BAEQ;AAAA;;AAAA,yBAOH,KAAKK,KAPF;AAAA,UAELN,SAFK,gBAELA,SAFK;AAAA,UAGLC,gBAHK,gBAGLA,gBAHK;AAAA,UAILC,YAJK,gBAILA,YAJK;AAAA,UAKLC,YALK,gBAKLA,YALK;AAAA,2CAMLY,IANK;AAAA,yDAM2B,EAN3B;AAAA,oDAMGC,IANH;AAAA,UAMGA,IANH,sCAMU,EANV;AAAA,oDAMcC,GANd;AAAA,UAMcA,GANd,sCAMoB,EANpB;;AAQP,UAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,YAAIhB,YAAJ,EAAkB;AAChB,8BACE,oBAAC,UAAD;AACE,YAAA,YAAY,EAAE,IADhB;AAEE,YAAA,KAAK,EAAE,IAFT;AAGE,YAAA,IAAI,EAAED,gBAHR;AAIE,YAAA,WAAW,EAAE,MAAI,CAACI,UAJpB;AAKE,YAAA,aAAa,EAAE,MAAI,CAACA,UALtB;AAME,YAAA,SAAS,EAAEF,YAAY,GAAG,cAAH,GAAoB,EAN7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAQE,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEa,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF;AAYD;;AACD,YAAIhB,SAAJ,EAAe;AACb,8BAAO,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEiB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,4BAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAED,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAnBD;;AAqBA,aAAOE,gBAAgB,EAAvB;AACD;;;;EAhDmB1B,KAAK,CAAC2B,S;AAmD5B,eAAef,OAAf","sourcesContent":["import 'rc-drawer/assets/index.css'\r\nimport React from 'react'\r\nimport DrawerMenu from 'rc-drawer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport MenuLeft from './MenuLeft'\r\nimport MenuTop from './MenuTop'\r\n\r\nconst mapStateToProps = ({ settings }) => ({\r\n  isMenuTop: settings.isMenuTop,\r\n  isMobileMenuOpen: settings.isMobileMenuOpen,\r\n  isMobileView: settings.isMobileView,\r\n  isLightTheme: settings.isLightTheme,\r\n})\r\n\r\n@withRouter\r\n@connect(mapStateToProps)\r\nclass AppMenu extends React.Component {\r\n  toggleOpen = () => {\r\n    const { dispatch, isMobileMenuOpen } = this.props\r\n    document\r\n      .querySelector('#root')\r\n      .setAttribute(\r\n        'style',\r\n        !isMobileMenuOpen ? 'overflow: hidden; width: 100%; height: 100%;' : '',\r\n      )\r\n    dispatch({\r\n      type: 'settings/CHANGE_SETTING',\r\n      payload: {\r\n        setting: 'isMobileMenuOpen',\r\n        value: !isMobileMenuOpen,\r\n      },\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isMenuTop,\r\n      isMobileMenuOpen,\r\n      isMobileView,\r\n      isLightTheme,\r\n      menu: { left = [], top = [] } = {},\r\n    } = this.props\r\n    const BootstrappedMenu = () => {\r\n      if (isMobileView) {\r\n        return (\r\n          <DrawerMenu\r\n            getContainer={null}\r\n            level={null}\r\n            open={isMobileMenuOpen}\r\n            onMaskClick={this.toggleOpen}\r\n            onHandleClick={this.toggleOpen}\r\n            className={isLightTheme ? 'drawer-light' : ''}\r\n          >\r\n            <MenuLeft menu={left} />\r\n          </DrawerMenu>\r\n        )\r\n      }\r\n      if (isMenuTop) {\r\n        return <MenuTop menu={top} />\r\n      }\r\n      return <MenuLeft menu={left} />\r\n    }\r\n\r\n    return BootstrappedMenu()\r\n  }\r\n}\r\n\r\nexport default AppMenu\r\n"]},"metadata":{},"sourceType":"module"}