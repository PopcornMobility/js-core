{"ast":null,"code":"import _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport store from 'store';\nimport actions from './actions';\n\nvar STORED_SETTINGS = function STORED_SETTINGS(storedSettings) {\n  var settings = {};\n  Object.keys(storedSettings).forEach(function (key) {\n    var item = store.get(\"app.settings.\".concat(key));\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key];\n\n    if (key === 'locale' && settings[key].length > 2) {\n      // prevent issue with stored locale settings in the form of: en-US,\n      // after switching to the simplified form (en)\n      settings.locale = storedSettings.locale;\n    }\n  });\n  return settings;\n};\n\nvar initialState = _objectSpread({}, STORED_SETTINGS({\n  isMobileView: false,\n  isMobileMenuOpen: false,\n  isLightTheme: false,\n  isSettingsOpen: false,\n  isMenuTop: false,\n  isMenuCollapsed: false,\n  isBorderless: true,\n  isSquaredBorders: false,\n  isFixedWidth: false,\n  isMenuShadow: false,\n  locale: 'en'\n}));\n\nexport default function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SET_STATE:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/redux/settings/reducers.js"],"names":["store","actions","STORED_SETTINGS","storedSettings","settings","Object","keys","forEach","key","item","get","length","locale","initialState","isMobileView","isMobileMenuOpen","isLightTheme","isSettingsOpen","isMenuTop","isMenuCollapsed","isBorderless","isSquaredBorders","isFixedWidth","isMenuShadow","userReducer","state","action","type","SET_STATE","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,cAAc,EAAI;AACxC,MAAMC,QAAQ,GAAG,EAAjB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,OAA5B,CAAoC,UAAAC,GAAG,EAAI;AACzC,QAAMC,IAAI,GAAGT,KAAK,CAACU,GAAN,wBAA0BF,GAA1B,EAAb;AAEAJ,IAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgB,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqCN,cAAc,CAACK,GAAD,CAAnE;;AAEA,QAAIA,GAAG,KAAK,QAAR,IAAoBJ,QAAQ,CAACI,GAAD,CAAR,CAAcG,MAAd,GAAuB,CAA/C,EAAkD;AAChD;AACA;AACAP,MAAAA,QAAQ,CAACQ,MAAT,GAAkBT,cAAc,CAACS,MAAjC;AACD;AACF,GAVD;AAYA,SAAOR,QAAP;AACD,CAfD;;AAiBA,IAAMS,YAAY,qBACbX,eAAe,CAAC;AACjBY,EAAAA,YAAY,EAAE,KADG;AAEjBC,EAAAA,gBAAgB,EAAE,KAFD;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,cAAc,EAAE,KAJC;AAKjBC,EAAAA,SAAS,EAAE,KALM;AAMjBC,EAAAA,eAAe,EAAE,KANA;AAOjBC,EAAAA,YAAY,EAAE,IAPG;AAQjBC,EAAAA,gBAAgB,EAAE,KARD;AASjBC,EAAAA,YAAY,EAAE,KATG;AAUjBC,EAAAA,YAAY,EAAE,KAVG;AAWjBX,EAAAA,MAAM,EAAE;AAXS,CAAD,CADF,CAAlB;;AAgBA,eAAe,SAASY,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBZ,YAAsB;AAAA,MAARa,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,OAAO,CAAC2B,SAAb;AACE,+BAAYH,KAAZ,EAAsBC,MAAM,CAACG,OAA7B;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD","sourcesContent":["import store from 'store'\nimport actions from './actions'\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {}\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`)\n\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key]\n\n    if (key === 'locale' && settings[key].length > 2) {\n      // prevent issue with stored locale settings in the form of: en-US,\n      // after switching to the simplified form (en)\n      settings.locale = storedSettings.locale\n    }\n  })\n\n  return settings\n}\n\nconst initialState = {\n  ...STORED_SETTINGS({\n    isMobileView: false,\n    isMobileMenuOpen: false,\n    isLightTheme: false,\n    isSettingsOpen: false,\n    isMenuTop: false,\n    isMenuCollapsed: false,\n    isBorderless: true,\n    isSquaredBorders: false,\n    isFixedWidth: false,\n    isMenuShadow: false,\n    locale: 'en',\n  }),\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}