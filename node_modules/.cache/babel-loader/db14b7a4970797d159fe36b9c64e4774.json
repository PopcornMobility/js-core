{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n      generateConfig = _ref.generateConfig,\n      locale = _ref.locale;\n\n  var _useMemo = useMemo(function () {\n    if (!value) {\n      return [[''], ''];\n    } // We will convert data format back to first format\n\n\n    var firstValueText = '';\n    var fullValueTexts = [];\n\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = formatList[i];\n      var formatStr = formatValue(value, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: format\n      });\n      fullValueTexts.push(formatStr);\n\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList, locale], function (prev, next) {\n    return (// Not Same Date\n      !isEqual(generateConfig, prev[0], next[0]) || // Not Same format\n      !shallowEqual(prev[1], next[1], true) || // Not Same locale\n      !shallowEqual(prev[2], next[2], true)\n    );\n  }),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      texts = _useMemo2[0],\n      text = _useMemo2[1];\n\n  return React.useMemo(function () {\n    return [texts, text];\n  }, [texts.join(''), text]);\n}","map":null,"metadata":{},"sourceType":"module"}