{"ast":null,"code":"import _toConsumableArray from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/generic/DataTable/columnSelector.js\";\n\nimport React from \"react\";\nimport { Switch, Button, Popover, Tooltip } from \"antd\";\nimport isObject from \"lodash/isObject\";\nimport store from \"store\";\nimport { injectIntl } from \"react-intl\";\n\nvar ColumnSelector = injectIntl(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ColumnSelector, _React$Component);\n\n  function ColumnSelector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ColumnSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ColumnSelector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOnChange = function (checked, event, dataIndex) {\n      var _this$props = _this.props,\n          onColumnSelectionChanged = _this$props.onColumnSelectionChanged,\n          settingsKey = _this$props.settingsKey,\n          columns = _this$props.columns;\n      var result = {};\n      columns.forEach(function (el) {\n        var keyOrDataIndex = el.dataIndex || el.key;\n        result[keyOrDataIndex] = el.hidden;\n      });\n      result[dataIndex] = !checked;\n\n      if (settingsKey) {\n        store.set(\"app.datatable.\".concat(settingsKey), {\n          columnSelector: _objectSpread({}, result)\n        });\n      }\n\n      onColumnSelectionChanged(result);\n    };\n\n    return _this;\n  }\n\n  _createClass(ColumnSelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          onColumnSelectionChanged = _this$props2.onColumnSelectionChanged,\n          settingsKey = _this$props2.settingsKey,\n          columns = _this$props2.columns; // Check for settingsKey and localStorage settings\n      // Apply once and send to parent <DataTable /> state\n\n      if (settingsKey) {\n        var tableSettings = store.get(\"app.datatable.\".concat(settingsKey));\n\n        if (tableSettings) {\n          var columnSelectorSettings = tableSettings.columnSelector;\n\n          if (columnSelectorSettings && isObject(columnSelectorSettings)) {\n            var result = {};\n\n            var newColumns = _toConsumableArray(columns);\n\n            newColumns = newColumns.map(function (col) {\n              var keyOrDataIndex = col.dataIndex || col.key;\n\n              if (columnSelectorSettings[keyOrDataIndex]) {\n                col.hidden = columnSelectorSettings[keyOrDataIndex];\n              }\n\n              return col;\n            });\n            newColumns.forEach(function (el) {\n              var keyOrDataIndex = el.dataIndex || el.key;\n              result[keyOrDataIndex] = el.hidden;\n            });\n            onColumnSelectionChanged(result);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = this.props.columns;\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          intl = _this$props3.intl; // Filter columns based on 'excludeFromColumnSelector' prop\n\n      columns = columns.filter(function (el) {\n        return el.excludeFromColumnSelector !== true;\n      });\n      var settings = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, columns.length > 0 ? columns.map(function (el) {\n        var keyOrDataIndex = el.dataIndex || el.key;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: keyOrDataIndex,\n          className: \"mb-2\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          className: \"mr-3\",\n          checked: !el.hidden,\n          onChange: function onChange(checked, event) {\n            return _this2.handleOnChange(checked, event, keyOrDataIndex);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }), el.title);\n      }) : \"No columns selected\");\n      return /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottomRight\",\n        trigger: \"click\",\n        content: settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"top\",\n        title: intl.formatMessage({\n          id: \"datatable.tooltips.columns\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: className,\n        icon: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ColumnSelector;\n}(React.Component), _temp)) || _class;\n\nexport default ColumnSelector;","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/generic/DataTable/columnSelector.js"],"names":["React","Switch","Button","Popover","Tooltip","isObject","store","injectIntl","ColumnSelector","handleOnChange","checked","event","dataIndex","props","onColumnSelectionChanged","settingsKey","columns","result","forEach","el","keyOrDataIndex","key","hidden","set","columnSelector","tableSettings","get","columnSelectorSettings","newColumns","map","col","className","intl","filter","excludeFromColumnSelector","settings","width","length","title","formatMessage","id","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,OAAlC,QAAiD,MAAjD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;;IAGMC,c,GADLD,U;;;;;;;;;;;;;;;;UAqCCE,c,GAAiB,UAACC,OAAD,EAAUC,KAAV,EAAiBC,SAAjB,EAA+B;AAAA,wBACa,MAAKC,KADlB;AAAA,UACtCC,wBADsC,eACtCA,wBADsC;AAAA,UACZC,WADY,eACZA,WADY;AAAA,UACCC,OADD,eACCA,OADD;AAG9C,UAAMC,MAAM,GAAG,EAAf;AAEAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,EAAE,EAAI;AACpB,YAAMC,cAAc,GAAGD,EAAE,CAACP,SAAH,IAAgBO,EAAE,CAACE,GAA1C;AACAJ,QAAAA,MAAM,CAACG,cAAD,CAAN,GAAyBD,EAAE,CAACG,MAA5B;AACD,OAHD;AAKAL,MAAAA,MAAM,CAACL,SAAD,CAAN,GAAoB,CAACF,OAArB;;AAEA,UAAIK,WAAJ,EAAiB;AACfT,QAAAA,KAAK,CAACiB,GAAN,yBAA2BR,WAA3B,GAA0C;AACxCS,UAAAA,cAAc,oBAAOP,MAAP;AAD0B,SAA1C;AAGD;;AAEDH,MAAAA,wBAAwB,CAACG,MAAD,CAAxB;AACD,K;;;;;;;wCAtDmB;AAAA,yBACyC,KAAKJ,KAD9C;AAAA,UACVC,wBADU,gBACVA,wBADU;AAAA,UACgBC,WADhB,gBACgBA,WADhB;AAAA,UAC6BC,OAD7B,gBAC6BA,OAD7B,EAGlB;AACA;;AACA,UAAID,WAAJ,EAAiB;AACf,YAAMU,aAAa,GAAGnB,KAAK,CAACoB,GAAN,yBAA2BX,WAA3B,EAAtB;;AAEA,YAAIU,aAAJ,EAAmB;AACjB,cAAME,sBAAsB,GAAGF,aAAa,CAACD,cAA7C;;AAEA,cAAIG,sBAAsB,IAAItB,QAAQ,CAACsB,sBAAD,CAAtC,EAAgE;AAC9D,gBAAMV,MAAM,GAAG,EAAf;;AACA,gBAAIW,UAAU,sBAAOZ,OAAP,CAAd;;AAEAY,YAAAA,UAAU,GAAGA,UAAU,CAACC,GAAX,CAAe,UAAAC,GAAG,EAAI;AACjC,kBAAMV,cAAc,GAAGU,GAAG,CAAClB,SAAJ,IAAiBkB,GAAG,CAACT,GAA5C;;AACA,kBAAIM,sBAAsB,CAACP,cAAD,CAA1B,EAA4C;AAC1CU,gBAAAA,GAAG,CAACR,MAAJ,GAAaK,sBAAsB,CAACP,cAAD,CAAnC;AACD;;AAED,qBAAOU,GAAP;AACD,aAPY,CAAb;AASAF,YAAAA,UAAU,CAACV,OAAX,CAAmB,UAAAC,EAAE,EAAI;AACvB,kBAAMC,cAAc,GAAGD,EAAE,CAACP,SAAH,IAAgBO,EAAE,CAACE,GAA1C;AACAJ,cAAAA,MAAM,CAACG,cAAD,CAAN,GAAyBD,EAAE,CAACG,MAA5B;AACD,aAHD;AAKAR,YAAAA,wBAAwB,CAACG,MAAD,CAAxB;AACD;AACF;AACF;AACF;;;6BAuBQ;AAAA;;AAAA,UACDD,OADC,GACW,KAAKH,KADhB,CACDG,OADC;AAAA,yBAEqB,KAAKH,KAF1B;AAAA,UAECkB,SAFD,gBAECA,SAFD;AAAA,UAEYC,IAFZ,gBAEYA,IAFZ,EAIP;;AACAhB,MAAAA,OAAO,GAAGA,OAAO,CAACiB,MAAR,CAAe,UAAAd,EAAE;AAAA,eAAIA,EAAE,CAACe,yBAAH,KAAiC,IAArC;AAAA,OAAjB,CAAV;AAEA,UAAMC,QAAQ,gBACZ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,OAAO,CAACqB,MAAR,GAAiB,CAAjB,GACGrB,OAAO,CAACa,GAAR,CAAY,UAAAV,EAAE,EAAI;AAChB,YAAMC,cAAc,GAAGD,EAAE,CAACP,SAAH,IAAgBO,EAAE,CAACE,GAA1C;AACA,4BACE;AAAK,UAAA,GAAG,EAAED,cAAV;AAA0B,UAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,OAAO,EAAE,CAACD,EAAE,CAACG,MAFf;AAGE,UAAA,QAAQ,EAAE,kBAACZ,OAAD,EAAUC,KAAV;AAAA,mBACR,MAAI,CAACF,cAAL,CAAoBC,OAApB,EAA6BC,KAA7B,EAAoCS,cAApC,CADQ;AAAA,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAQGD,EAAE,CAACmB,KARN,CADF;AAYD,OAdD,CADH,GAgBG,qBAjBN,CADF;AAsBA,0BACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAiC,QAAA,OAAO,EAAC,OAAzC;AAAiD,QAAA,OAAO,EAAEH,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAEH,IAAI,CAACO,aAAL,CAAmB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAET,SAAnB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CADF;AAUD;;;;EAhG0B/B,KAAK,CAACyC,S;;AAmGnC,eAAejC,cAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Button, Popover, Tooltip } from \"antd\";\nimport isObject from \"lodash/isObject\";\nimport store from \"store\";\nimport { injectIntl } from \"react-intl\";\n\n@injectIntl\nclass ColumnSelector extends React.Component {\n  componentDidMount() {\n    const { onColumnSelectionChanged, settingsKey, columns } = this.props;\n\n    // Check for settingsKey and localStorage settings\n    // Apply once and send to parent <DataTable /> state\n    if (settingsKey) {\n      const tableSettings = store.get(`app.datatable.${settingsKey}`);\n\n      if (tableSettings) {\n        const columnSelectorSettings = tableSettings.columnSelector;\n\n        if (columnSelectorSettings && isObject(columnSelectorSettings)) {\n          const result = {};\n          let newColumns = [...columns];\n\n          newColumns = newColumns.map(col => {\n            const keyOrDataIndex = col.dataIndex || col.key;\n            if (columnSelectorSettings[keyOrDataIndex]) {\n              col.hidden = columnSelectorSettings[keyOrDataIndex];\n            }\n\n            return col;\n          });\n\n          newColumns.forEach(el => {\n            const keyOrDataIndex = el.dataIndex || el.key;\n            result[keyOrDataIndex] = el.hidden;\n          });\n\n          onColumnSelectionChanged(result);\n        }\n      }\n    }\n  }\n\n  handleOnChange = (checked, event, dataIndex) => {\n    const { onColumnSelectionChanged, settingsKey, columns } = this.props;\n\n    const result = {};\n\n    columns.forEach(el => {\n      const keyOrDataIndex = el.dataIndex || el.key;\n      result[keyOrDataIndex] = el.hidden;\n    });\n\n    result[dataIndex] = !checked;\n\n    if (settingsKey) {\n      store.set(`app.datatable.${settingsKey}`, {\n        columnSelector: { ...result }\n      });\n    }\n\n    onColumnSelectionChanged(result);\n  };\n\n  render() {\n    let { columns } = this.props;\n    const { className, intl } = this.props;\n\n    // Filter columns based on 'excludeFromColumnSelector' prop\n    columns = columns.filter(el => el.excludeFromColumnSelector !== true);\n\n    const settings = (\n      <div style={{ width: 200 }}>\n        {columns.length > 0\n          ? columns.map(el => {\n              const keyOrDataIndex = el.dataIndex || el.key;\n              return (\n                <div key={keyOrDataIndex} className=\"mb-2\">\n                  <Switch\n                    className=\"mr-3\"\n                    checked={!el.hidden}\n                    onChange={(checked, event) =>\n                      this.handleOnChange(checked, event, keyOrDataIndex)\n                    }\n                  />\n                  {el.title}\n                </div>\n              );\n            })\n          : \"No columns selected\"}\n      </div>\n    );\n\n    return (\n      <Popover placement=\"bottomRight\" trigger=\"click\" content={settings}>\n        <Tooltip\n          placement=\"top\"\n          title={intl.formatMessage({ id: \"datatable.tooltips.columns\" })}\n        >\n          <Button className={className} icon=\"table\" />\n        </Tooltip>\n      </Popover>\n    );\n  }\n}\n\nexport default ColumnSelector;\n"]},"metadata":{},"sourceType":"module"}