{"ast":null,"code":"import _objectSpread from \"/Users/stefanm/Projects/js-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stefanm/Projects/js-core/src/components/core/Localization/index.js\";\n\nimport * as React from \"react\";\nimport { ConfigProvider } from \"antd\";\nimport { RawIntlProvider } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport english from \"../../../locales/en\";\nimport romanian from \"../../../locales/ro\"; // import ukrainean from '../../../locales/uk'\n// import russian from '../../../locales/ru'\n\nimport { IntlSetup } from \"./intlSetup\";\nvar defaultLocale = {\n  en: english,\n  ro: romanian // uk: ukrainean,\n  // ru: russian,\n\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  return {\n    lang: settings.locale\n  };\n};\n\nvar Localization = function Localization(props) {\n  var children = props.children,\n      lang = props.lang,\n      locales = props.locales;\n  var CoreLocale = defaultLocale[lang] || english;\n\n  var processMessages = function processMessages(messages) {\n    var reindexedMessages = {};\n    Object.values(messages).forEach(function (chunk) {\n      Object.keys(chunk).forEach(function (language) {\n        reindexedMessages[language] = _objectSpread({}, reindexedMessages[language], chunk[language]);\n      });\n    });\n    return reindexedMessages;\n  };\n\n  var ModuleLocale = processMessages(locales);\n\n  var AppLocale = _objectSpread({}, CoreLocale.messages, ModuleLocale[lang]);\n\n  var intl = IntlSetup({\n    locale: lang,\n    messages: AppLocale\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    locale: CoreLocale.antdData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RawIntlProvider, {\n    value: intl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default connect(mapStateToProps)(Localization);","map":{"version":3,"sources":["/Users/stefanm/Projects/js-core/src/components/core/Localization/index.js"],"names":["React","ConfigProvider","RawIntlProvider","connect","english","romanian","IntlSetup","defaultLocale","en","ro","mapStateToProps","settings","lang","locale","Localization","props","children","locales","CoreLocale","processMessages","messages","reindexedMessages","Object","values","forEach","chunk","keys","language","ModuleLocale","AppLocale","intl","antdData"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;AACA;;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAEJ,OADgB;AAEpBK,EAAAA,EAAE,EAAEJ,QAFgB,CAGpB;AACA;;AAJoB,CAAtB;;AAOA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAmB;AAAEC,IAAAA,IAAI,EAAED,QAAQ,CAACE;AAAjB,GAAnB;AAAA,CAAxB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MACpBC,QADoB,GACQD,KADR,CACpBC,QADoB;AAAA,MACVJ,IADU,GACQG,KADR,CACVH,IADU;AAAA,MACJK,OADI,GACQF,KADR,CACJE,OADI;AAG5B,MAAMC,UAAU,GAAGX,aAAa,CAACK,IAAD,CAAb,IAAuBR,OAA1C;;AAEA,MAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AAClC,QAAMC,iBAAiB,GAAG,EAA1B;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAcH,QAAd,EAAwBI,OAAxB,CAAgC,UAAAC,KAAK,EAAI;AACvCH,MAAAA,MAAM,CAACI,IAAP,CAAYD,KAAZ,EAAmBD,OAAnB,CAA2B,UAAAG,QAAQ,EAAI;AACrCN,QAAAA,iBAAiB,CAACM,QAAD,CAAjB,qBACKN,iBAAiB,CAACM,QAAD,CADtB,EAEKF,KAAK,CAACE,QAAD,CAFV;AAID,OALD;AAMD,KAPD;AASA,WAAON,iBAAP;AACD,GAbD;;AAeA,MAAMO,YAAY,GAAGT,eAAe,CAACF,OAAD,CAApC;;AAEA,MAAMY,SAAS,qBACVX,UAAU,CAACE,QADD,EAEVQ,YAAY,CAAChB,IAAD,CAFF,CAAf;;AAKA,MAAMkB,IAAI,GAAGxB,SAAS,CAAC;AAAEO,IAAAA,MAAM,EAAED,IAAV;AAAgBQ,IAAAA,QAAQ,EAAES;AAA1B,GAAD,CAAtB;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEX,UAAU,CAACa,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bd,QAA/B,CADF,CADF;AAKD,CAlCD;;AAoCA,eAAeb,OAAO,CAACO,eAAD,CAAP,CAAyBI,YAAzB,CAAf","sourcesContent":["import * as React from \"react\";\nimport { ConfigProvider } from \"antd\";\nimport { RawIntlProvider } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport english from \"../../../locales/en\";\nimport romanian from \"../../../locales/ro\";\n// import ukrainean from '../../../locales/uk'\n// import russian from '../../../locales/ru'\n\nimport { IntlSetup } from \"./intlSetup\";\n\nconst defaultLocale = {\n  en: english,\n  ro: romanian\n  // uk: ukrainean,\n  // ru: russian,\n};\n\nconst mapStateToProps = ({ settings }) => ({ lang: settings.locale });\n\nconst Localization = props => {\n  const { children, lang, locales } = props;\n\n  const CoreLocale = defaultLocale[lang] || english;\n\n  const processMessages = messages => {\n    const reindexedMessages = {};\n\n    Object.values(messages).forEach(chunk => {\n      Object.keys(chunk).forEach(language => {\n        reindexedMessages[language] = {\n          ...reindexedMessages[language],\n          ...chunk[language]\n        };\n      });\n    });\n\n    return reindexedMessages;\n  };\n\n  const ModuleLocale = processMessages(locales);\n\n  const AppLocale = {\n    ...CoreLocale.messages,\n    ...ModuleLocale[lang]\n  };\n\n  const intl = IntlSetup({ locale: lang, messages: AppLocale });\n\n  return (\n    <ConfigProvider locale={CoreLocale.antdData}>\n      <RawIntlProvider value={intl}>{children}</RawIntlProvider>\n    </ConfigProvider>\n  );\n};\n\nexport default connect(mapStateToProps)(Localization);\n"]},"metadata":{},"sourceType":"module"}