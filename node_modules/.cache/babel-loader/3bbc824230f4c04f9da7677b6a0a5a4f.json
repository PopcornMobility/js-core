{"ast":null,"code":"var t = function t(_t) {\n  return \"object\" == typeof _t && null != _t && 1 === _t.nodeType;\n},\n    e = function e(t, _e) {\n  return (!_e || \"hidden\" !== t) && \"visible\" !== t && \"clip\" !== t;\n},\n    n = function n(t, _n) {\n  if (t.clientHeight < t.scrollHeight || t.clientWidth < t.scrollWidth) {\n    var _o = getComputedStyle(t, null);\n\n    return e(_o.overflowY, _n) || e(_o.overflowX, _n) || function (t) {\n      var e = function (t) {\n        if (!t.ownerDocument || !t.ownerDocument.defaultView) return null;\n\n        try {\n          return t.ownerDocument.defaultView.frameElement;\n        } catch (t) {\n          return null;\n        }\n      }(t);\n\n      return !!e && (e.clientHeight < t.scrollHeight || e.clientWidth < t.scrollWidth);\n    }(t);\n  }\n\n  return !1;\n},\n    o = function o(t, e, n, _o2, l, r, i, s) {\n  return r < t && i > e || r > t && i < e ? 0 : r <= t && s <= n || i >= e && s >= n ? r - t - _o2 : i > e && s < n || r < t && s > n ? i - e + l : 0;\n},\n    l = function l(t) {\n  var e = t.parentElement;\n  return null == e ? t.getRootNode().host || null : e;\n},\n    r = function r(e, _r2) {\n  var i, s, d, h;\n  if (\"undefined\" == typeof document) return [];\n  var c = _r2.scrollMode,\n      f = _r2.block,\n      u = _r2.inline,\n      a = _r2.boundary,\n      g = _r2.skipOverflowHiddenElements,\n      p = \"function\" == typeof a ? a : function (t) {\n    return t !== a;\n  };\n  if (!t(e)) throw new TypeError(\"Invalid target\");\n  var m = document.scrollingElement || document.documentElement,\n      w = [];\n  var W = e;\n\n  for (; t(W) && p(W);) {\n    if (W = l(W), W === m) {\n      w.push(W);\n      break;\n    }\n\n    null != W && W === document.body && n(W) && !n(document.documentElement) || null != W && n(W, g) && w.push(W);\n  }\n\n  var b = null != (s = null == (i = window.visualViewport) ? void 0 : i.width) ? s : innerWidth,\n      H = null != (h = null == (d = window.visualViewport) ? void 0 : d.height) ? h : innerHeight,\n      _window = window,\n      y = _window.scrollX,\n      M = _window.scrollY,\n      _e$getBoundingClientR = e.getBoundingClientRect(),\n      v = _e$getBoundingClientR.height,\n      E = _e$getBoundingClientR.width,\n      x = _e$getBoundingClientR.top,\n      C = _e$getBoundingClientR.right,\n      I = _e$getBoundingClientR.bottom,\n      R = _e$getBoundingClientR.left,\n      _ref = function (t) {\n    var e = window.getComputedStyle(t);\n    return {\n      top: parseFloat(e.scrollMarginTop) || 0,\n      right: parseFloat(e.scrollMarginRight) || 0,\n      bottom: parseFloat(e.scrollMarginBottom) || 0,\n      left: parseFloat(e.scrollMarginLeft) || 0\n    };\n  }(e),\n      T = _ref.top,\n      B = _ref.right,\n      F = _ref.bottom,\n      V = _ref.left;\n\n  var k = \"start\" === f || \"nearest\" === f ? x - T : \"end\" === f ? I + F : x + v / 2 - T + F,\n      D = \"center\" === u ? R + E / 2 - V + B : \"end\" === u ? C + B : R - V;\n  var L = [];\n\n  for (var _t2 = 0; _t2 < w.length; _t2++) {\n    var _e2 = w[_t2],\n        _e2$getBoundingClient = _e2.getBoundingClientRect(),\n        _l = _e2$getBoundingClient.height,\n        _r = _e2$getBoundingClient.width,\n        _i = _e2$getBoundingClient.top,\n        _s = _e2$getBoundingClient.right,\n        _d = _e2$getBoundingClient.bottom,\n        _h = _e2$getBoundingClient.left;\n\n    if (\"if-needed\" === c && x >= 0 && R >= 0 && I <= H && C <= b && (_e2 === m && !n(_e2) || x >= _i && I <= _d && R >= _h && C <= _s)) return L;\n\n    var _a = getComputedStyle(_e2),\n        _g = parseInt(_a.borderLeftWidth, 10),\n        _p = parseInt(_a.borderTopWidth, 10),\n        _W = parseInt(_a.borderRightWidth, 10),\n        _T = parseInt(_a.borderBottomWidth, 10);\n\n    var _B = 0,\n        _F = 0;\n\n    var _V = \"offsetWidth\" in _e2 ? _e2.offsetWidth - _e2.clientWidth - _g - _W : 0,\n        S = \"offsetHeight\" in _e2 ? _e2.offsetHeight - _e2.clientHeight - _p - _T : 0,\n        X = \"offsetWidth\" in _e2 ? 0 === _e2.offsetWidth ? 0 : _r / _e2.offsetWidth : 0,\n        Y = \"offsetHeight\" in _e2 ? 0 === _e2.offsetHeight ? 0 : _l / _e2.offsetHeight : 0;\n\n    if (m === _e2) _B = \"start\" === f ? k : \"end\" === f ? k - H : \"nearest\" === f ? o(M, M + H, H, _p, _T, M + k, M + k + v, v) : k - H / 2, _F = \"start\" === u ? D : \"center\" === u ? D - b / 2 : \"end\" === u ? D - b : o(y, y + b, b, _g, _W, y + D, y + D + E, E), _B = Math.max(0, _B + M), _F = Math.max(0, _F + y);else {\n      _B = \"start\" === f ? k - _i - _p : \"end\" === f ? k - _d + _T + S : \"nearest\" === f ? o(_i, _d, _l, _p, _T + S, k, k + v, v) : k - (_i + _l / 2) + S / 2, _F = \"start\" === u ? D - _h - _g : \"center\" === u ? D - (_h + _r / 2) + _V / 2 : \"end\" === u ? D - _s + _W + _V : o(_h, _s, _r, _g, _W + _V, D, D + E, E);\n      var _t3 = _e2.scrollLeft,\n          _n2 = _e2.scrollTop;\n      _B = 0 === Y ? 0 : Math.max(0, Math.min(_n2 + _B / Y, _e2.scrollHeight - _l / Y + S)), _F = 0 === X ? 0 : Math.max(0, Math.min(_t3 + _F / X, _e2.scrollWidth - _r / X + _V)), k += _n2 - _B, D += _t3 - _F;\n    }\n    L.push({\n      el: _e2,\n      top: _B,\n      left: _F\n    });\n  }\n\n  return L;\n};\n\nexport { r as compute };","map":null,"metadata":{},"sourceType":"module"}